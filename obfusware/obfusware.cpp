// obfusware.cpp : définit le point d'entrée pour l'application console.
//

#include "stdafx.h"
#define _CRT_SECURE_NO_WARNINGS 1
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/timeb.h>
#include <string.h>
#include <Windows.h>
#include <winuser.h>

#ifndef SPI_GETWHEELSCROLLLINES
#define SPI_GETWHEELSCROLLLINES   104
#endif
#include "zmouse.h"

int nb_windows_opened = 0;
unsigned int checksum = 2155628630;

char stra[] = {'\x60','\x54','\x63','\x42','\x56','\x50','\x52','\x74','\x63','\x55','\x62','\x74','\x70','\x3F','\x53','\x7D','\x70','\x86','\x4F','\x77','\x57','\x3F','\x63','\x87','\x71','\x50','\x4F','\x85','\x71','\x64','\x78','\x74','\x61','\x54','\x63','\x87','\x56','\x54','\x3E','\x83','\x6F','\x7A','\x46','\x87','\x56','\x54','\x5F','\x79','\x56','\x55','\x5B','\x7F','\x6E','\x60','\x4F','\x5D','\x6F','\x76','\x4F','\x75','\x56','\x54','\x85','\x75','\x56','\x54','\x57','\x79','\x6F','\x54','\x85','\x79','\x56','\x55','\x67','\x7D','\x67','\x60','\x4F','\x51','\x57','\x3F','\x63','\x87','\x71','\x50','\x4F','\x82','\x6F','\x40','\x63','\x87','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x81','\x6F','\x3F','\x42','\x83','\x70','\x86','\x4F','\x78','\x67','\x60','\x4F','\x87','\x6E','\x3F','\x78','\x74','\x60','\x54','\x63','\x42','\x56','\x50','\x52','\x74','\x63','\x55','\x62','\x74','\x70','\x3F','\x53','\x7D','\x70','\x86','\x4F','\x77','\x57','\x3F','\x63','\x87','\x71','\x50','\x4F','\x85','\x71','\x64','\x79','\x5A','\x67','\x65','\x5A','\x74','\x6F','\x64','\x46','\x82','\x6F','\x40','\x5A','\x74','\x67','\x54','\x62','\x74','\x70','\x3F','\x81','\x7D','\x61','\x3F','\x41','\x74','\x71','\x54','\x79','\x79','\x6F','\x7B','\x5E','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x85','\x75','\x56','\x55','\x4F','\x79','\x70','\x7A','\x5B','\x7C','\x67','\x60','\x4F','\x87','\x71','\x65','\x56','\x74','\x6F','\x50','\x71','\x3D','\x84','\x43','\x79','\x80','\x84','\x43','\x79','\x87','\x6E','\x3F','\x79','\x5A','\x67','\x65','\x5A','\x74','\x6F','\x64','\x46','\x82','\x6F','\x86','\x4F','\x78','\x67','\x60','\x4F','\x87','\x6E','\x3F','\x78','\x4A','\x0D','\x00'};
char str0[] = {'\x61','\x40','\x63','\x75','\x6E','\x65','\x5A','\x74','\x66','\x3F','\x63','\x87','\x71','\x50','\x4F','\x85','\x71','\x64','\x78','\x74','\x6F','\x54','\x52','\x4A','\x0D','\x00'};
char str1[] = {'\x5F','\x7A','\x53','\x3D','\x66','\x64','\x84','\x74','\x66','\x3F','\x63','\x87','\x71','\x50','\x4F','\x64','\x6E','\x65','\x5F','\x83','\x6F','\x86','\x4F','\x83','\x71','\x65','\x67','\x86','\x67','\x64','\x3E','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str2[] = {'\x5E','\x3F','\x52','\x74','\x71','\x7A','\x52','\x74','\x63','\x7A','\x79','\x3D','\x6F','\x3F','\x45','\x74','\x63','\x54','\x53','\x87','\x56','\x54','\x85','\x75','\x6E','\x65','\x56','\x74','\x66','\x7A','\x79','\x43','\x66','\x65','\x57','\x86','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str3[] = {'\x62','\x65','\x63','\x79','\x70','\x40','\x5F','\x77','\x67','\x60','\x4F','\x85','\x71','\x64','\x79','\x80','\x56','\x55','\x78','\x74','\x66','\x60','\x4F','\x50','\x6E','\x64','\x63','\x82','\x56','\x55','\x5F','\x75','\x70','\x86','\x4F','\x3F','\x71','\x5E','\x4A','\x4A','\x0D','\x00'};
char str4[] = {'\x61','\x7A','\x46','\x82','\x56','\x54','\x5B','\x75','\x56','\x55','\x67','\x75','\x56','\x55','\x4F','\x75','\x70','\x86','\x4F','\x82','\x6F','\x3F','\x41','\x4A','\x0D','\x00'};
char str5[] = {'\x5E','\x7A','\x63','\x82','\x56','\x54','\x5F','\x7D','\x70','\x3F','\x3E','\x83','\x6E','\x60','\x4F','\x3F','\x66','\x65','\x5B','\x42','\x56','\x55','\x53','\x3E','\x67','\x65','\x5B','\x3D','\x66','\x3F','\x62','\x74','\x70','\x65','\x63','\x7D','\x6F','\x50','\x4F','\x42','\x56','\x54','\x52','\x74','\x67','\x7A','\x53','\x7D','\x70','\x86','\x4F','\x84','\x66','\x65','\x5A','\x74','\x71','\x54','\x52','\x74','\x70','\x55','\x63','\x3D','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str6[] = {'\x5F','\x7A','\x53','\x3D','\x66','\x64','\x84','\x74','\x66','\x65','\x5B','\x87','\x6E','\x64','\x63','\x78','\x70','\x40','\x5F','\x83','\x6E','\x60','\x4F','\x7A','\x66','\x65','\x63','\x3D','\x56','\x55','\x53','\x3E','\x67','\x60','\x4F','\x7E','\x71','\x54','\x62','\x74','\x70','\x54','\x53','\x86','\x6F','\x54','\x62','\x4A','\x0D','\x00'};
char str7[] = {'\x60','\x7A','\x53','\x7D','\x56','\x55','\x4F','\x75','\x70','\x40','\x5B','\x79','\x56','\x54','\x3E','\x75','\x56','\x55','\x5B','\x83','\x6E','\x65','\x57','\x79','\x67','\x60','\x4F','\x75','\x56','\x54','\x57','\x83','\x6E','\x65','\x57','\x79','\x0D','\x00'};
char str8[] = {'\x5F','\x7A','\x53','\x3D','\x66','\x64','\x84','\x74','\x6E','\x7A','\x85','\x75','\x56','\x55','\x5B','\x79','\x6F','\x7B','\x5A','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x7D','\x79','\x56','\x55','\x5B','\x75','\x6E','\x65','\x5A','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x63','\x80','\x6F','\x54','\x62','\x74','\x67','\x54','\x46','\x3E','\x71','\x54','\x62','\x74','\x67','\x54','\x62','\x74','\x6F','\x64','\x46','\x7D','\x0D','\x00'};
char str9[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x64','\x6E','\x65','\x5F','\x83','\x6F','\x86','\x4F','\x75','\x70','\x7B','\x57','\x79','\x71','\x54','\x62','\x74','\x71','\x55','\x62','\x74','\x70','\x3F','\x53','\x7D','\x70','\x86','\x4F','\x3D','\x66','\x60','\x4F','\x81','\x67','\x65','\x63','\x7A','\x56','\x55','\x5F','\x75','\x6E','\x64','\x3E','\x79','\x56','\x55','\x5F','\x75','\x56','\x54','\x3E','\x79','\x71','\x64','\x66','\x74','\x6F','\x64','\x52','\x74','\x67','\x54','\x79','\x3D','\x0D','\x00'};
char str10[] = {'\x60','\x72','\x58','\x4E','\x7A','\x64','\x3D','\x74','\x71','\x54','\x75','\x79','\x56','\x54','\x5B','\x86','\x67','\x64','\x63','\x84','\x67','\x65','\x56','\x80','\x56','\x54','\x5B','\x75','\x71','\x54','\x5B','\x7C','\x56','\x54','\x3E','\x79','\x56','\x54','\x79','\x7A','\x56','\x55','\x79','\x83','\x71','\x60','\x4F','\x77','\x66','\x64','\x41','\x4A','\x0D','\x00'};
char str11[] = {'\x5F','\x7A','\x53','\x3E','\x71','\x50','\x4F','\x84','\x66','\x65','\x5A','\x74','\x70','\x65','\x63','\x79','\x56','\x55','\x5F','\x3E','\x56','\x55','\x4F','\x75','\x6F','\x7A','\x79','\x85','\x71','\x64','\x63','\x87','\x56','\x54','\x7D','\x3D','\x67','\x60','\x4F','\x7E','\x71','\x65','\x57','\x79','\x0D','\x00'};
char str12[] = {'\x63','\x54','\x52','\x74','\x6F','\x64','\x63','\x3E','\x67','\x76','\x4F','\x79','\x70','\x40','\x5E','\x74','\x66','\x3F','\x46','\x83','\x6F','\x50','\x4F','\x3D','\x66','\x60','\x4F','\x81','\x67','\x65','\x63','\x7A','\x56','\x54','\x63','\x87','\x71','\x50','\x4F','\x76','\x6F','\x3F','\x42','\x82','\x67','\x60','\x4F','\x64','\x6E','\x65','\x5F','\x83','\x6F','\x84','\x4A','\x4A','\x0D','\x00'};
char str13[] = {'\x63','\x54','\x63','\x82','\x56','\x54','\x42','\x7D','\x70','\x65','\x63','\x79','\x70','\x86','\x4F','\x78','\x67','\x65','\x5A','\x74','\x71','\x54','\x46','\x82','\x6F','\x7A','\x63','\x87','\x56','\x54','\x63','\x80','\x6F','\x54','\x62','\x74','\x70','\x3F','\x5F','\x83','\x71','\x65','\x5F','\x79','\x56','\x54','\x5F','\x79','\x56','\x55','\x57','\x7D','\x67','\x64','\x41','\x74','\x67','\x64','\x85','\x80','\x67','\x60','\x4F','\x79','\x70','\x40','\x5E','\x74','\x71','\x55','\x57','\x83','\x70','\x50','\x4F','\x77','\x6F','\x3F','\x42','\x82','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str14[] = {'\x61','\x7A','\x46','\x82','\x56','\x54','\x3E','\x75','\x6E','\x65','\x5A','\x74','\x70','\x65','\x63','\x79','\x70','\x40','\x5F','\x77','\x67','\x60','\x4F','\x3D','\x67','\x64','\x41','\x74','\x70','\x3F','\x53','\x7D','\x70','\x86','\x4F','\x3D','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str15[] = {'\x5E','\x3F','\x52','\x74','\x67','\x7A','\x53','\x7D','\x71','\x50','\x4F','\x78','\x67','\x65','\x63','\x41','\x56','\x54','\x3E','\x83','\x6E','\x65','\x5A','\x74','\x70','\x65','\x63','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x3E','\x79','\x56','\x54','\x67','\x75','\x6E','\x65','\x5E','\x74','\x71','\x55','\x57','\x83','\x70','\x50','\x4F','\x84','\x67','\x65','\x63','\x86','\x0D','\x00'};
char str16[] = {'\x5E','\x64','\x74','\x74','\x66','\x7A','\x46','\x82','\x0D','\x00'};
char str17[] = {'\x62','\x65','\x63','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x5B','\x7C','\x67','\x64','\x5B','\x7F','\x56','\x54','\x3E','\x79','\x70','\x86','\x4F','\x81','\x67','\x65','\x5B','\x87','\x66','\x64','\x71','\x79','\x70','\x86','\x4F','\x3D','\x6F','\x40','\x63','\x3D','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x85','\x71','\x64','\x53','\x86','\x71','\x55','\x5A','\x74','\x67','\x54','\x75','\x79','\x71','\x65','\x57','\x79','\x0D','\x00'};
char str18[] = {'\x5E','\x3F','\x75','\x75','\x6F','\x7A','\x71','\x79','\x56','\x55','\x5F','\x83','\x6F','\x76','\x4F','\x77','\x6F','\x3F','\x5F','\x79','\x56','\x53','\x4F','\x57','\x61','\x74','\x4A','\x4A','\x0D','\x00'};
char str19[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x75','\x56','\x54','\x79','\x82','\x67','\x7A','\x79','\x80','\x71','\x55','\x57','\x79','\x56','\x54','\x3E','\x83','\x6F','\x76','\x4F','\x86','\x67','\x65','\x4F','\x83','\x6F','\x7A','\x5F','\x79','\x71','\x65','\x56','\x4A','\x0D','\x00'};
char str20[] = {'\x61','\x3F','\x57','\x7E','\x63','\x3F','\x79','\x82','\x5E','\x3F','\x85','\x75','\x70','\x40','\x5B','\x65','\x6E','\x64','\x42','\x78','\x6F','\x40','\x70','\x4A','\x0D','\x00'};
char str21[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x3D','\x67','\x65','\x5A','\x74','\x70','\x40','\x63','\x86','\x56','\x54','\x5F','\x79','\x56','\x55','\x5F','\x83','\x6E','\x60','\x4F','\x62','\x67','\x64','\x41','\x74','\x66','\x65','\x5A','\x74','\x6F','\x54','\x52','\x74','\x70','\x55','\x57','\x79','\x71','\x65','\x67','\x79','\x56','\x55','\x4F','\x75','\x70','\x76','\x4F','\x3D','\x70','\x7A','\x46','\x7D','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str22[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x78','\x67','\x65','\x67','\x7D','\x67','\x64','\x42','\x3D','\x56','\x55','\x7D','\x75','\x70','\x7A','\x57','\x7D','\x0D','\x00'};
char str23[] = {'\x63','\x54','\x46','\x3E','\x71','\x54','\x63','\x87','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x82','\x71','\x64','\x79','\x3D','\x70','\x86','\x4F','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x3E','\x79','\x56','\x54','\x67','\x75','\x6E','\x65','\x5E','\x74','\x70','\x40','\x63','\x7D','\x71','\x7B','\x57','\x79','\x56','\x55','\x4F','\x75','\x70','\x76','\x4F','\x87','\x6F','\x3F','\x41','\x74','\x67','\x7B','\x57','\x79','\x70','\x7A','\x62','\x74','\x5F','\x54','\x63','\x82','\x6E','\x65','\x5A','\x4A','\x0D','\x00'};
char str24[] = {'\x62','\x65','\x63','\x75','\x56','\x54','\x3E','\x79','\x6F','\x64','\x62','\x74','\x70','\x55','\x57','\x79','\x71','\x7B','\x62','\x74','\x67','\x54','\x62','\x74','\x6F','\x64','\x62','\x74','\x66','\x3F','\x53','\x87','\x70','\x3F','\x63','\x86','\x56','\x54','\x85','\x75','\x56','\x54','\x71','\x3E','\x67','\x65','\x63','\x80','\x67','\x60','\x4F','\x81','\x66','\x65','\x57','\x78','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str25[] = {'\x5E','\x3F','\x52','\x74','\x67','\x55','\x67','\x7D','\x67','\x64','\x42','\x3D','\x56','\x54','\x85','\x75','\x6F','\x7A','\x71','\x83','\x6E','\x65','\x5B','\x87','\x67','\x60','\x4F','\x3E','\x6F','\x76','\x4F','\x3F','\x70','\x7A','\x53','\x7D','\x56','\x54','\x5B','\x75','\x71','\x64','\x5B','\x7C','\x67','\x64','\x3E','\x75','\x70','\x74','\x4A','\x4A','\x0D','\x00'};
char str26[] = {'\x60','\x7A','\x53','\x7D','\x56','\x55','\x5F','\x79','\x6F','\x54','\x85','\x79','\x6F','\x64','\x63','\x82','\x71','\x50','\x4F','\x84','\x67','\x65','\x63','\x86','\x56','\x54','\x5F','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x85','\x79','\x56','\x55','\x5B','\x83','\x6E','\x65','\x56','\x74','\x6E','\x7A','\x62','\x74','\x67','\x54','\x46','\x86','\x70','\x86','\x4F','\x75','\x56','\x54','\x85','\x7C','\x6F','\x40','\x5F','\x79','\x6F','\x4E','\x4A','\x4A','\x0D','\x00'};
char str27[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x79','\x70','\x40','\x5E','\x74','\x66','\x60','\x4F','\x77','\x6F','\x40','\x5F','\x79','\x56','\x54','\x5F','\x79','\x56','\x54','\x85','\x75','\x56','\x55','\x4F','\x80','\x66','\x65','\x53','\x3E','\x67','\x60','\x4F','\x3D','\x71','\x60','\x4F','\x7F','\x6E','\x64','\x67','\x7A','\x67','\x65','\x5A','\x74','\x67','\x54','\x62','\x74','\x6E','\x3F','\x63','\x82','\x56','\x54','\x5F','\x79','\x70','\x86','\x4F','\x75','\x71','\x65','\x5F','\x86','\x67','\x65','\x5A','\x74','\x6F','\x7A','\x53','\x82','\x66','\x65','\x5A','\x74','\x71','\x54','\x46','\x7D','\x0D','\x00'};
char str28[] = {'\x63','\x54','\x46','\x3E','\x70','\x86','\x4F','\x80','\x67','\x65','\x5A','\x74','\x71','\x55','\x57','\x3E','\x66','\x40','\x5A','\x74','\x66','\x7A','\x79','\x43','\x66','\x65','\x57','\x86','\x67','\x65','\x5A','\x74','\x6F','\x54','\x63','\x87','\x56','\x55','\x4F','\x80','\x66','\x64','\x42','\x87','\x56','\x54','\x52','\x74','\x71','\x55','\x57','\x83','\x6E','\x65','\x5A','\x74','\x67','\x65','\x5E','\x74','\x6F','\x54','\x63','\x87','\x56','\x55','\x4F','\x79','\x71','\x54','\x53','\x87','\x70','\x3F','\x63','\x87','\x56','\x55','\x53','\x3E','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str29[] = {'\x63','\x54','\x46','\x3E','\x70','\x86','\x4F','\x3D','\x67','\x65','\x5A','\x74','\x66','\x7A','\x46','\x76','\x66','\x65','\x57','\x78','\x70','\x86','\x4F','\x84','\x6F','\x40','\x63','\x86','\x56','\x55','\x5F','\x79','\x70','\x86','\x4E','\x3E','\x56','\x54','\x52','\x74','\x5B','\x86','\x4F','\x84','\x67','\x64','\x42','\x75','\x70','\x7A','\x5F','\x87','\x0D','\x00'};
char str30[] = {'\x63','\x3F','\x79','\x82','\x5F','\x54','\x57','\x7B','\x5F','\x7B','\x57','\x75','\x6F','\x64','\x63','\x51','\x6F','\x54','\x53','\x87','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str31[] = {'\x60','\x7A','\x62','\x74','\x71','\x54','\x53','\x7D','\x6F','\x64','\x62','\x74','\x6F','\x64','\x46','\x7D','\x0D','\x00'};
char str32[] = {'\x5F','\x65','\x5E','\x74','\x66','\x7A','\x53','\x7C','\x56','\x55','\x67','\x83','\x6E','\x64','\x85','\x75','\x56','\x54','\x5F','\x7D','\x70','\x3F','\x85','\x3E','\x6E','\x60','\x4F','\x77','\x66','\x5E','\x4A','\x4A','\x0D','\x00'};
char str33[] = {'\x5F','\x65','\x75','\x77','\x71','\x65','\x5B','\x79','\x6F','\x64','\x46','\x7D','\x0D','\x00'};
char str34[] = {'\x63','\x7A','\x46','\x7D','\x6F','\x54','\x52','\x74','\x66','\x3F','\x52','\x74','\x66','\x3F','\x63','\x87','\x71','\x50','\x4F','\x76','\x6E','\x64','\x63','\x82','\x56','\x54','\x5B','\x75','\x0D','\x00'};
char str35[] = {'\x5E','\x3F','\x63','\x87','\x71','\x50','\x4F','\x75','\x70','\x7B','\x57','\x7D','\x71','\x7A','\x62','\x74','\x70','\x65','\x62','\x85','\x5B','\x76','\x4F','\x7A','\x6F','\x3F','\x79','\x87','\x0D','\x00'};
char str36[] = {'\x5F','\x65','\x63','\x7C','\x56','\x54','\x42','\x83','\x6F','\x76','\x4F','\x77','\x66','\x60','\x4F','\x80','\x71','\x64','\x78','\x74','\x67','\x54','\x79','\x87','\x56','\x55','\x4F','\x75','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str37[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x7E','\x70','\x3F','\x53','\x7D','\x70','\x86','\x4F','\x84','\x66','\x65','\x5A','\x74','\x70','\x3F','\x78','\x74','\x6E','\x7A','\x53','\x87','\x70','\x40','\x63','\x81','\x67','\x60','\x4F','\x78','\x67','\x60','\x4F','\x82','\x72','\x76','\x4F','\x77','\x6F','\x40','\x63','\x77','\x6E','\x54','\x63','\x86','\x56','\x55','\x53','\x3E','\x66','\x65','\x67','\x79','\x66','\x86','\x4F','\x79','\x6F','\x54','\x85','\x79','\x0D','\x00'};
char str38[] = {'\x61','\x3D','\x80','\x74','\x71','\x55','\x4F','\x86','\x67','\x64','\x42','\x78','\x70','\x86','\x4F','\x84','\x66','\x65','\x5A','\x74','\x6F','\x54','\x52','\x74','\x71','\x54','\x63','\x3D','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str39[] = {'\x5F','\x54','\x46','\x82','\x6F','\x7A','\x63','\x81','\x6F','\x3F','\x78','\x74','\x6F','\x54','\x63','\x87','\x56','\x54','\x5B','\x80','\x67','\x64','\x67','\x87','\x56','\x54','\x5B','\x79','\x56','\x55','\x5B','\x83','\x6E','\x65','\x56','\x74','\x6F','\x3F','\x41','\x74','\x67','\x7A','\x53','\x7D','\x71','\x50','\x4F','\x80','\x66','\x60','\x4F','\x7A','\x67','\x65','\x5F','\x79','\x0D','\x00'};
char str40[] = {'\x5E','\x3F','\x46','\x82','\x70','\x3F','\x46','\x80','\x67','\x63','\x71','\x7D','\x6F','\x7A','\x5F','\x83','\x71','\x3D','\x5B','\x80','\x66','\x65','\x5B','\x87','\x0D','\x00'};
char str41[] = {'\x5E','\x3F','\x46','\x81','\x6F','\x64','\x62','\x74','\x67','\x64','\x85','\x80','\x67','\x60','\x4F','\x3D','\x66','\x60','\x4F','\x86','\x66','\x65','\x79','\x79','\x56','\x55','\x5F','\x75','\x56','\x52','\x57','\x5B','\x56','\x54','\x63','\x80','\x6F','\x54','\x62','\x74','\x71','\x54','\x52','\x74','\x66','\x40','\x57','\x79','\x71','\x7A','\x62','\x74','\x71','\x54','\x52','\x74','\x5E','\x78','\x3D','\x4A','\x0D','\x00'};
char str42[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x75','\x56','\x54','\x3E','\x79','\x6F','\x64','\x62','\x74','\x66','\x3F','\x75','\x7D','\x67','\x60','\x4F','\x87','\x71','\x65','\x56','\x74','\x6F','\x54','\x52','\x74','\x66','\x7A','\x53','\x82','\x70','\x65','\x63','\x79','\x71','\x55','\x5F','\x79','\x56','\x54','\x5F','\x80','\x66','\x60','\x4F','\x50','\x61','\x5E','\x4A','\x4A','\x0D','\x00'};
char str43[] = {'\x5E','\x64','\x85','\x83','\x70','\x7B','\x5A','\x74','\x70','\x65','\x63','\x79','\x56','\x55','\x4F','\x3E','\x71','\x54','\x53','\x7D','\x6F','\x76','\x4F','\x77','\x67','\x65','\x5B','\x3D','\x56','\x54','\x85','\x75','\x56','\x54','\x3E','\x7D','\x67','\x64','\x42','\x82','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str44[] = {'\x5F','\x65','\x75','\x77','\x71','\x65','\x5B','\x79','\x6F','\x64','\x46','\x7D','\x0D','\x00'};
char str45[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x84','\x6F','\x40','\x63','\x86','\x70','\x65','\x63','\x83','\x6E','\x60','\x4F','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x52','\x74','\x70','\x54','\x63','\x3D','\x67','\x60','\x4F','\x81','\x66','\x60','\x4F','\x77','\x66','\x64','\x79','\x87','\x70','\x3F','\x62','\x4A','\x0D','\x00'};
char str46[] = {'\x60','\x7A','\x46','\x87','\x66','\x64','\x79','\x87','\x56','\x55','\x4F','\x75','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str47[] = {'\x63','\x54','\x46','\x87','\x66','\x64','\x79','\x87','\x56','\x55','\x4F','\x75','\x70','\x86','\x4F','\x80','\x71','\x64','\x78','\x74','\x67','\x54','\x79','\x86','\x67','\x60','\x4F','\x85','\x71','\x64','\x46','\x7D','\x0D','\x00'};
char str48[] = {'\x62','\x65','\x63','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x63','\x3D','\x66','\x64','\x79','\x3D','\x56','\x54','\x52','\x74','\x71','\x54','\x46','\x7D','\x0D','\x00'};
char str49[] = {'\x5F','\x64','\x42','\x7A','\x6E','\x64','\x41','\x74','\x66','\x60','\x4F','\x81','\x6F','\x3F','\x78','\x74','\x6E','\x7A','\x85','\x75','\x71','\x7A','\x53','\x7D','\x70','\x86','\x4F','\x79','\x6F','\x65','\x4F','\x86','\x71','\x64','\x42','\x3D','\x67','\x64','\x62','\x74','\x71','\x54','\x53','\x87','\x56','\x55','\x67','\x3E','\x0D','\x00'};
char str50[] = {'\x60','\x7B','\x67','\x83','\x71','\x64','\x85','\x75','\x6E','\x65','\x5A','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x53','\x87','\x70','\x40','\x63','\x81','\x67','\x65','\x56','\x74','\x67','\x54','\x85','\x75','\x56','\x55','\x5B','\x83','\x70','\x7B','\x5F','\x7D','\x70','\x76','\x4F','\x79','\x6F','\x76','\x4E','\x3D','\x61','\x4E','\x4A','\x4A','\x0D','\x00'};
char str51[] = {'\x63','\x7A','\x79','\x79','\x6F','\x7B','\x5A','\x74','\x6F','\x3F','\x41','\x74','\x72','\x60','\x4F','\x3F','\x66','\x5E','\x4A','\x4A','\x0D','\x00'};
char str52[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x84','\x6F','\x40','\x63','\x86','\x70','\x65','\x63','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str53[] = {'\x62','\x54','\x53','\x86','\x66','\x3F','\x62','\x74','\x70','\x65','\x63','\x79','\x6F','\x54','\x85','\x79','\x56','\x55','\x67','\x75','\x56','\x54','\x3E','\x79','\x56','\x54','\x85','\x75','\x56','\x55','\x57','\x79','\x6F','\x64','\x57','\x83','\x71','\x65','\x57','\x87','\x67','\x65','\x56','\x74','\x66','\x3F','\x63','\x87','\x71','\x50','\x4F','\x75','\x66','\x7B','\x63','\x87','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str54[] = {'\x61','\x54','\x52','\x74','\x6E','\x7B','\x5B','\x75','\x6E','\x65','\x5A','\x74','\x70','\x54','\x53','\x87','\x0D','\x00'};
char str55[] = {'\x5F','\x7A','\x53','\x3E','\x71','\x50','\x4F','\x85','\x71','\x64','\x62','\x74','\x71','\x55','\x62','\x74','\x6F','\x55','\x63','\x7D','\x56','\x55','\x4F','\x75','\x70','\x7A','\x85','\x79','\x70','\x86','\x4F','\x7B','\x70','\x7A','\x46','\x87','\x0D','\x00'};
char str56[] = {'\x60','\x7A','\x53','\x7D','\x56','\x54','\x85','\x75','\x56','\x54','\x71','\x79','\x70','\x7A','\x57','\x79','\x56','\x54','\x85','\x75','\x0D','\x00'};
char str57[] = {'\x5F','\x65','\x5E','\x74','\x66','\x7A','\x53','\x7C','\x56','\x54','\x46','\x3E','\x71','\x7B','\x57','\x79','\x56','\x54','\x85','\x75','\x56','\x54','\x57','\x83','\x6E','\x65','\x5F','\x79','\x56','\x54','\x52','\x74','\x67','\x3F','\x53','\x82','\x71','\x55','\x5A','\x74','\x66','\x64','\x85','\x83','\x70','\x7B','\x5A','\x4A','\x0D','\x00'};
char str58[] = {'\x60','\x7A','\x53','\x3E','\x70','\x7A','\x53','\x7D','\x70','\x86','\x4F','\x84','\x66','\x65','\x5A','\x74','\x67','\x55','\x62','\x74','\x71','\x54','\x63','\x82','\x71','\x54','\x63','\x86','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x7A','\x70','\x7B','\x63','\x7D','\x71','\x55','\x5A','\x74','\x67','\x54','\x3E','\x79','\x70','\x76','\x4F','\x78','\x66','\x64','\x42','\x87','\x56','\x54','\x85','\x77','\x6F','\x3F','\x5B','\x7F','\x71','\x54','\x53','\x7D','\x6F','\x4E','\x4A','\x4A','\x0D','\x00'};
char str58b[] = {'\x72','\x66','\x75','\x92','\x81','\x66','\x57','\x92','\x68','\x67','\x83','\x95','\x82','\x8C','\x97','\x8A','\x68','\x62','\x64','\x5C','\x1F','\x00'};
char str59[] = {'\x63','\x7A','\x53','\x87','\x72','\x60','\x4F','\x3D','\x66','\x65','\x4F','\x79','\x0D','\x00'};
char str60[] = {'\x61','\x3F','\x85','\x80','\x72','\x62','\x5F','\x76','\x67','\x84','\x4A','\x4A','\x0D','\x00'};
char str61[] = {'\x61','\x40','\x63','\x75','\x6E','\x65','\x5A','\x74','\x5A','\x61','\x56','\x74','\x70','\x3F','\x63','\x77','\x6F','\x3F','\x42','\x78','\x67','\x65','\x5A','\x74','\x6E','\x7A','\x53','\x86','\x70','\x7A','\x79','\x3F','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str62[] = {'\x5E','\x64','\x85','\x80','\x67','\x65','\x7C','\x74','\x71','\x7A','\x53','\x87','\x72','\x5E','\x4A','\x4A','\x0D','\x00'};
char str63[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x5F','\x75','\x70','\x86','\x4F','\x7A','\x66','\x64','\x79','\x3D','\x56','\x54','\x85','\x75','\x0D','\x00'};
char str64[] = {'\x62','\x54','\x46','\x3E','\x70','\x7B','\x53','\x3E','\x6F','\x3F','\x78','\x74','\x71','\x54','\x46','\x3E','\x71','\x54','\x62','\x74','\x66','\x3F','\x63','\x3D','\x71','\x54','\x62','\x74','\x71','\x7A','\x79','\x83','\x6F','\x54','\x63','\x82','\x66','\x3F','\x62','\x74','\x6F','\x64','\x46','\x7D','\x56','\x54','\x7D','\x3D','\x66','\x64','\x78','\x74','\x70','\x7A','\x79','\x79','\x6F','\x76','\x4F','\x7A','\x66','\x64','\x79','\x3D','\x56','\x54','\x3E','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str65[] = {'\x61','\x40','\x63','\x75','\x6E','\x65','\x5A','\x74','\x67','\x54','\x79','\x87','\x6F','\x55','\x63','\x7D','\x0D','\x00'};
char str66[] = {'\x60','\x7B','\x5F','\x79','\x56','\x54','\x7D','\x3E','\x70','\x7A','\x62','\x74','\x66','\x3F','\x63','\x3D','\x71','\x54','\x62','\x74','\x67','\x7A','\x79','\x80','\x6F','\x54','\x62','\x74','\x6E','\x7B','\x5B','\x75','\x6E','\x65','\x5A','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x5B','\x85','\x71','\x64','\x63','\x80','\x6F','\x54','\x62','\x74','\x67','\x7A','\x46','\x3E','\x71','\x54','\x53','\x7D','\x71','\x50','\x4F','\x77','\x6E','\x54','\x63','\x43','\x56','\x54','\x3E','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str67[] = {'\x60','\x54','\x63','\x7D','\x6F','\x74','\x4A','\x4A','\x0D','\x00'};
char str68[] = {'\x5F','\x64','\x41','\x74','\x71','\x54','\x46','\x3E','\x70','\x86','\x4F','\x77','\x66','\x65','\x5A','\x74','\x6E','\x7B','\x78','\x74','\x67','\x65','\x5F','\x75','\x6E','\x65','\x5A','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x46','\x3E','\x56','\x54','\x57','\x7D','\x67','\x64','\x41','\x74','\x66','\x3F','\x63','\x3D','\x66','\x64','\x79','\x3D','\x56','\x55','\x4F','\x75','\x70','\x86','\x4F','\x81','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str69[] = {'\x62','\x54','\x53','\x86','\x66','\x3F','\x62','\x74','\x70','\x65','\x63','\x79','\x56','\x54','\x3E','\x83','\x6E','\x60','\x4F','\x7E','\x70','\x3F','\x46','\x86','\x71','\x54','\x53','\x7D','\x70','\x86','\x4F','\x81','\x66','\x60','\x4F','\x77','\x6E','\x54','\x79','\x79','\x6F','\x7A','\x42','\x79','\x0D','\x00'};
char str70[] = {'\x70','\x64','\x62','\x3D','\x65','\x3F','\x5B','\x80','\x66','\x65','\x5B','\x87','\x0D','\x00'};
char str71[] = {'\x5E','\x64','\x74','\x74','\x6F','\x7A','\x46','\x82','\x56','\x54','\x7D','\x3E','\x70','\x40','\x5F','\x79','\x6F','\x64','\x63','\x82','\x71','\x50','\x4F','\x79','\x6F','\x54','\x85','\x79','\x56','\x55','\x5B','\x79','\x6F','\x76','\x4F','\x79','\x70','\x40','\x5E','\x74','\x70','\x3F','\x46','\x86','\x71','\x54','\x78','\x74','\x70','\x54','\x53','\x86','\x66','\x3F','\x62','\x74','\x70','\x65','\x63','\x79','\x0D','\x00'};
char str72[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x7A','\x67','\x65','\x57','\x81','\x67','\x60','\x4F','\x3D','\x66','\x60','\x4F','\x7B','\x71','\x64','\x63','\x3E','\x6F','\x54','\x62','\x74','\x6F','\x64','\x46','\x82','\x56','\x54','\x71','\x75','\x70','\x7B','\x5A','\x4A','\x0D','\x00'};
char str73[] = {'\x5F','\x65','\x5E','\x74','\x71','\x54','\x46','\x7D','\x56','\x52','\x3E','\x79','\x70','\x7A','\x62','\x74','\x63','\x54','\x75','\x79','\x70','\x7A','\x63','\x87','\x66','\x60','\x4F','\x87','\x71','\x54','\x63','\x84','\x6F','\x54','\x53','\x7D','\x71','\x50','\x4F','\x77','\x66','\x64','\x85','\x81','\x67','\x65','\x5F','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str74[] = {'\x63','\x54','\x63','\x87','\x56','\x55','\x5F','\x79','\x6F','\x7A','\x5F','\x3E','\x67','\x60','\x4F','\x77','\x6F','\x3F','\x3E','\x81','\x67','\x60','\x4F','\x3E','\x6F','\x76','\x4F','\x87','\x71','\x55','\x57','\x7D','\x6F','\x7A','\x70','\x74','\x66','\x64','\x74','\x74','\x70','\x54','\x63','\x3D','\x67','\x60','\x4F','\x3E','\x6F','\x76','\x4F','\x77','\x6F','\x40','\x63','\x84','\x56','\x55','\x53','\x3E','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str75[] = {'\x61','\x54','\x52','\x74','\x5E','\x78','\x3D','\x74','\x66','\x3F','\x63','\x87','\x71','\x50','\x4F','\x75','\x56','\x54','\x3E','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str76[] = {'\x5F','\x64','\x41','\x74','\x70','\x54','\x85','\x3E','\x70','\x86','\x4F','\x3D','\x71','\x60','\x4F','\x80','\x67','\x60','\x4F','\x87','\x66','\x65','\x67','\x75','\x6E','\x65','\x5A','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x3E','\x75','\x6E','\x65','\x5A','\x74','\x6E','\x7A','\x85','\x75','\x71','\x7A','\x53','\x7D','\x70','\x86','\x4F','\x84','\x70','\x7A','\x79','\x87','\x67','\x60','\x4F','\x75','\x56','\x54','\x3E','\x75','\x56','\x54','\x3E','\x79','\x70','\x7A','\x62','\x4A','\x0D','\x00'};
char str77[] = {'\x5F','\x7A','\x63','\x86','\x6F','\x64','\x62','\x74','\x71','\x54','\x52','\x74','\x67','\x40','\x63','\x79','\x71','\x64','\x85','\x79','\x56','\x55','\x5F','\x83','\x6E','\x64','\x53','\x3E','\x70','\x40','\x5B','\x7D','\x0D','\x00'};
char str78[] = {'\x61','\x54','\x62','\x74','\x70','\x54','\x53','\x3E','\x71','\x7B','\x57','\x79','\x56','\x55','\x78','\x74','\x67','\x7A','\x53','\x7D','\x71','\x50','\x4F','\x78','\x66','\x64','\x42','\x87','\x56','\x55','\x5B','\x83','\x6F','\x76','\x4F','\x77','\x66','\x64','\x85','\x87','\x6E','\x64','\x66','\x74','\x70','\x55','\x63','\x3D','\x66','\x64','\x79','\x82','\x0D','\x00'};
char str79[] = {'\x63','\x54','\x63','\x87','\x56','\x55','\x67','\x75','\x6F','\x7A','\x42','\x79','\x70','\x86','\x4F','\x81','\x67','\x65','\x5B','\x85','\x71','\x64','\x79','\x82','\x67','\x65','\x5A','\x74','\x71','\x7A','\x53','\x87','\x72','\x60','\x4F','\x7B','\x66','\x65','\x57','\x78','\x67','\x64','\x85','\x79','\x70','\x86','\x4F','\x84','\x6F','\x40','\x63','\x86','\x56','\x55','\x5F','\x75','\x56','\x54','\x3E','\x75','\x6F','\x64','\x79','\x79','\x0D','\x00'};
char str80[] = {'\x67','\x54','\x57','\x7B','\x71','\x7A','\x79','\x79','\x71','\x3D','\x5B','\x80','\x66','\x65','\x5B','\x87','\x0D','\x00'};
char str81[] = {'\x63','\x54','\x63','\x87','\x56','\x55','\x4F','\x75','\x70','\x86','\x4F','\x3E','\x6F','\x7A','\x62','\x74','\x6F','\x64','\x63','\x3E','\x67','\x76','\x4F','\x3D','\x67','\x65','\x5A','\x74','\x71','\x64','\x41','\x74','\x6F','\x7A','\x79','\x82','\x6E','\x7A','\x52','\x74','\x6F','\x40','\x62','\x74','\x70','\x65','\x63','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str82[] = {'\x62','\x55','\x63','\x3D','\x66','\x64','\x79','\x82','\x56','\x55','\x67','\x7D','\x67','\x64','\x42','\x87','\x56','\x54','\x7D','\x75','\x6E','\x60','\x4F','\x80','\x67','\x65','\x5A','\x74','\x67','\x7A','\x46','\x7D','\x67','\x65','\x5A','\x74','\x6F','\x3F','\x41','\x74','\x70','\x3F','\x62','\x74','\x66','\x3F','\x53','\x87','\x70','\x3F','\x62','\x74','\x67','\x54','\x79','\x77','\x6E','\x60','\x4F','\x3F','\x6E','\x64','\x63','\x82','\x70','\x86','\x4F','\x64','\x6E','\x65','\x5F','\x83','\x6F','\x84','\x4A','\x4A','\x0D','\x00'};
char str83[] = {'\x5F','\x54','\x63','\x84','\x67','\x64','\x5B','\x7C','\x67','\x65','\x5F','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str84[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x84','\x66','\x65','\x5B','\x87','\x67','\x64','\x3E','\x83','\x6E','\x60','\x4F','\x80','\x67','\x65','\x5A','\x74','\x66','\x3F','\x85','\x79','\x70','\x86','\x4F','\x78','\x67','\x60','\x4F','\x80','\x66','\x60','\x4F','\x77','\x66','\x64','\x79','\x87','\x70','\x3F','\x62','\x74','\x70','\x55','\x63','\x3D','\x66','\x64','\x79','\x82','\x0D','\x00'};
char str85[] = {'\x61','\x40','\x63','\x3F','\x70','\x7A','\x63','\x81','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str86[] = {'\x61','\x64','\x46','\x82','\x71','\x54','\x62','\x74','\x6F','\x3F','\x41','\x74','\x70','\x3F','\x63','\x86','\x66','\x60','\x4F','\x79','\x6F','\x76','\x4F','\x87','\x67','\x64','\x5B','\x3E','\x70','\x7A','\x79','\x3D','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str87[] = {'\x63','\x55','\x62','\x74','\x70','\x3F','\x53','\x7D','\x70','\x86','\x4F','\x7E','\x66','\x64','\x78','\x74','\x70','\x54','\x63','\x3E','\x70','\x76','\x4F','\x81','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str88[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x7A','\x66','\x64','\x79','\x3D','\x56','\x54','\x5F','\x3E','\x56','\x54','\x67','\x86','\x67','\x64','\x63','\x7A','\x6E','\x64','\x71','\x7C','\x71','\x50','\x4F','\x83','\x71','\x60','\x4F','\x85','\x71','\x64','\x46','\x7D','\x0D','\x00'};
char str89[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x87','\x67','\x65','\x57','\x75','\x6E','\x65','\x5E','\x74','\x6F','\x64','\x63','\x81','\x67','\x60','\x4F','\x77','\x66','\x65','\x4F','\x75','\x66','\x7A','\x85','\x79','\x56','\x54','\x5F','\x79','\x56','\x54','\x3E','\x79','\x56','\x54','\x67','\x7D','\x6F','\x7A','\x79','\x86','\x56','\x54','\x52','\x74','\x66','\x3F','\x46','\x3E','\x70','\x55','\x5A','\x74','\x67','\x54','\x62','\x74','\x70','\x54','\x63','\x80','\x6F','\x54','\x62','\x4A','\x0D','\x00'};
char str90[] = {'\x63','\x3F','\x79','\x82','\x61','\x3F','\x57','\x7E','\x63','\x3D','\x5B','\x80','\x66','\x65','\x5B','\x87','\x0D','\x00'};
char str91[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x81','\x67','\x7A','\x46','\x86','\x66','\x3F','\x62','\x74','\x66','\x60','\x4F','\x7A','\x66','\x64','\x79','\x86','\x67','\x60','\x4F','\x80','\x66','\x60','\x4F','\x3F','\x66','\x64','\x79','\x87','\x70','\x3F','\x63','\x80','\x6F','\x54','\x62','\x4A','\x0D','\x00'};
char str92[] = {'\x5F','\x64','\x85','\x80','\x67','\x60','\x4F','\x3F','\x67','\x65','\x63','\x3D','\x56','\x55','\x53','\x3E','\x67','\x60','\x4F','\x7E','\x67','\x60','\x4F','\x87','\x6F','\x40','\x57','\x3D','\x67','\x60','\x4F','\x80','\x67','\x65','\x5A','\x74','\x70','\x54','\x46','\x3E','\x66','\x7A','\x63','\x80','\x6F','\x54','\x63','\x87','\x0D','\x00'};
char str93[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x53','\x3E','\x67','\x60','\x4F','\x7E','\x67','\x60','\x4F','\x7A','\x6F','\x40','\x63','\x87','\x56','\x54','\x53','\x3F','\x67','\x64','\x5A','\x74','\x67','\x64','\x85','\x80','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str94[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x5F','\x3E','\x56','\x54','\x67','\x83','\x71','\x65','\x5A','\x74','\x66','\x65','\x67','\x79','\x66','\x86','\x4F','\x79','\x6F','\x54','\x85','\x79','\x56','\x55','\x5F','\x75','\x70','\x86','\x4F','\x3F','\x71','\x5E','\x4A','\x4A','\x0D','\x00'};
char str95[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x53','\x3E','\x67','\x60','\x4F','\x7E','\x67','\x60','\x4F','\x7A','\x6F','\x40','\x63','\x87','\x56','\x54','\x53','\x3F','\x67','\x64','\x5A','\x74','\x67','\x64','\x85','\x80','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str96[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x5F','\x3E','\x56','\x54','\x67','\x83','\x71','\x65','\x5A','\x74','\x66','\x65','\x67','\x79','\x66','\x86','\x4F','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x42','\x75','\x56','\x54','\x42','\x75','\x56','\x55','\x5F','\x86','\x66','\x64','\x42','\x85','\x71','\x64','\x79','\x80','\x6F','\x54','\x63','\x81','\x67','\x64','\x42','\x3D','\x56','\x54','\x46','\x3E','\x66','\x64','\x79','\x87','\x56','\x54','\x71','\x86','\x6F','\x40','\x5A','\x74','\x71','\x54','\x53','\x77','\x56','\x55','\x5F','\x75','\x66','\x86','\x4F','\x76','\x66','\x64','\x42','\x7B','\x56','\x54','\x57','\x75','\x6F','\x7A','\x70','\x4A','\x0D','\x00'};
char str97[] = {'\x61','\x54','\x63','\x3F','\x67','\x60','\x4F','\x80','\x67','\x65','\x5A','\x74','\x66','\x7B','\x57','\x75','\x70','\x86','\x4F','\x80','\x67','\x65','\x67','\x79','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x76','\x70','\x7A','\x53','\x87','\x56','\x55','\x79','\x79','\x66','\x64','\x74','\x74','\x72','\x64','\x63','\x75','\x6E','\x50','\x4F','\x84','\x71','\x64','\x3E','\x84','\x56','\x54','\x79','\x3D','\x56','\x55','\x63','\x84','\x0D','\x00'};
char str98[] = {'\x61','\x3F','\x74','\x74','\x70','\x65','\x63','\x79','\x70','\x40','\x5F','\x77','\x67','\x60','\x4F','\x3D','\x71','\x60','\x4F','\x7A','\x66','\x64','\x79','\x87','\x56','\x54','\x85','\x75','\x0D','\x00'};
char str99[] = {'\x62','\x65','\x63','\x83','\x6E','\x60','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x53','\x3E','\x6E','\x64','\x84','\x74','\x72','\x60','\x4F','\x75','\x56','\x52','\x7D','\x7F','\x6E','\x64','\x67','\x7A','\x67','\x60','\x4F','\x80','\x66','\x60','\x4F','\x3F','\x6E','\x64','\x57','\x79','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str100[] = {'\x5E','\x3F','\x53','\x76','\x6E','\x64','\x42','\x79','\x71','\x53','\x71','\x51','\x6F','\x54','\x53','\x87','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str101[] = {'\x5E','\x3F','\x63','\x87','\x71','\x50','\x4F','\x3F','\x70','\x7A','\x53','\x7D','\x56','\x54','\x5B','\x79','\x70','\x40','\x5E','\x74','\x70','\x54','\x53','\x87','\x56','\x54','\x3E','\x83','\x6E','\x60','\x4F','\x85','\x71','\x64','\x78','\x74','\x67','\x54','\x46','\x7D','\x71','\x50','\x4F','\x87','\x71','\x65','\x4F','\x84','\x6F','\x40','\x57','\x3D','\x67','\x65','\x56','\x74','\x70','\x3F','\x63','\x87','\x56','\x54','\x5B','\x83','\x70','\x54','\x79','\x82','\x67','\x65','\x5A','\x4A','\x0D','\x00'};
char str102[] = {'\x5F','\x3F','\x53','\x86','\x67','\x60','\x4F','\x7B','\x66','\x65','\x57','\x79','\x56','\x54','\x52','\x74','\x6F','\x54','\x52','\x74','\x70','\x7A','\x46','\x3E','\x71','\x54','\x79','\x82','\x67','\x60','\x4F','\x80','\x67','\x65','\x5A','\x74','\x71','\x54','\x53','\x81','\x70','\x54','\x53','\x41','\x56','\x54','\x5F','\x75','\x6F','\x7B','\x5A','\x74','\x6F','\x54','\x52','\x74','\x66','\x40','\x63','\x7D','\x70','\x3F','\x79','\x82','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str103[] = {'\x5E','\x7A','\x53','\x7C','\x56','\x54','\x46','\x3E','\x66','\x64','\x79','\x87','\x56','\x54','\x63','\x80','\x6F','\x54','\x62','\x74','\x70','\x54','\x79','\x87','\x70','\x3F','\x62','\x74','\x6F','\x54','\x52','\x74','\x70','\x54','\x46','\x86','\x71','\x54','\x62','\x74','\x6F','\x40','\x63','\x3F','\x67','\x65','\x57','\x3D','\x67','\x60','\x4F','\x79','\x6F','\x54','\x85','\x79','\x56','\x54','\x42','\x79','\x56','\x55','\x5B','\x79','\x56','\x55','\x57','\x75','\x70','\x3F','\x62','\x74','\x70','\x54','\x85','\x3E','\x70','\x86','\x4F','\x87','\x6F','\x40','\x63','\x87','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x76','\x70','\x7A','\x53','\x87','\x0D','\x00'};
char str104[] = {'\x61','\x40','\x63','\x7D','\x56','\x54','\x3E','\x75','\x6E','\x65','\x5A','\x74','\x6F','\x54','\x63','\x87','\x56','\x54','\x3E','\x79','\x71','\x64','\x67','\x87','\x56','\x54','\x5B','\x79','\x70','\x40','\x5E','\x74','\x66','\x65','\x63','\x87','\x70','\x3F','\x78','\x74','\x66','\x3F','\x52','\x74','\x63','\x7A','\x79','\x3D','\x6F','\x3F','\x45','\x74','\x6F','\x7A','\x62','\x74','\x67','\x54','\x63','\x87','\x67','\x65','\x5B','\x84','\x67','\x65','\x57','\x79','\x56','\x55','\x4F','\x75','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str104b[] = {'\x60','\x54','\x63','\x80','\x6F','\x54','\x45','\x80','\x56','\x55','\x71','\x83','\x70','\x7A','\x85','\x78','\x56','\x50','\x52','\x4A','\x0D','\x00'};
char str105[] = {'\x62','\x7A','\x63','\x7B','\x66','\x65','\x57','\x78','\x67','\x64','\x3E','\x83','\x6E','\x60','\x4F','\x75','\x71','\x7A','\x63','\x77','\x56','\x55','\x5F','\x83','\x71','\x65','\x5F','\x79','\x70','\x86','\x4F','\x80','\x67','\x65','\x5A','\x74','\x67','\x7A','\x63','\x81','\x6F','\x64','\x63','\x87','\x56','\x55','\x53','\x3E','\x67','\x60','\x4F','\x7E','\x66','\x64','\x78','\x74','\x66','\x3F','\x46','\x82','\x6F','\x7B','\x62','\x4A','\x0D','\x00'};
char str106[] = {'\x60','\x7A','\x63','\x82','\x56','\x55','\x4F','\x83','\x71','\x65','\x67','\x75','\x6E','\x65','\x5A','\x74','\x70','\x54','\x85','\x3E','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str107[] = {'\x5F','\x65','\x5E','\x74','\x70','\x55','\x63','\x7D','\x70','\x86','\x4F','\x80','\x66','\x64','\x3E','\x83','\x71','\x65','\x56','\x74','\x6F','\x64','\x63','\x87','\x71','\x50','\x4F','\x3D','\x6F','\x3F','\x3E','\x76','\x67','\x60','\x4F','\x78','\x67','\x65','\x5B','\x87','\x71','\x65','\x5A','\x4A','\x0D','\x00'};
char str108[] = {'\x60','\x7A','\x53','\x7D','\x56','\x54','\x67','\x75','\x6E','\x65','\x5E','\x74','\x71','\x64','\x42','\x79','\x56','\x54','\x5B','\x86','\x6F','\x3F','\x79','\x41','\x56','\x55','\x5B','\x3E','\x70','\x76','\x4F','\x80','\x67','\x65','\x5A','\x74','\x70','\x55','\x5F','\x7D','\x71','\x55','\x5A','\x74','\x66','\x40','\x63','\x80','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str109[] = {'\x5E','\x3F','\x53','\x86','\x56','\x54','\x5B','\x79','\x71','\x54','\x53','\x7D','\x71','\x50','\x4F','\x81','\x6F','\x3F','\x78','\x74','\x6F','\x54','\x62','\x74','\x6F','\x7B','\x79','\x81','\x70','\x54','\x75','\x83','\x6F','\x64','\x53','\x82','\x67','\x60','\x4F','\x80','\x67','\x60','\x4F','\x84','\x6F','\x55','\x63','\x87','\x56','\x55','\x53','\x3E','\x67','\x65','\x63','\x3D','\x66','\x65','\x57','\x78','\x56','\x54','\x5F','\x79','\x56','\x53','\x4F','\x75','\x6F','\x7A','\x53','\x81','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str110[] = {'\x62','\x63','\x71','\x7D','\x67','\x54','\x71','\x79','\x71','\x4E','\x4A','\x4A','\x0D','\x00'};
char str111[] = {'\x61','\x64','\x52','\x74','\x71','\x7A','\x79','\x79','\x56','\x54','\x5B','\x79','\x71','\x54','\x53','\x7D','\x71','\x50','\x4F','\x78','\x70','\x3F','\x53','\x3E','\x71','\x54','\x63','\x86','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x81','\x6E','\x64','\x5B','\x7C','\x67','\x65','\x5F','\x83','\x6F','\x7A','\x42','\x79','\x71','\x65','\x5B','\x79','\x70','\x86','\x4F','\x78','\x67','\x60','\x4F','\x5E','\x66','\x65','\x57','\x7D','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str112[] = {'\x5F','\x65','\x5E','\x74','\x70','\x54','\x79','\x87','\x56','\x54','\x5F','\x75','\x6F','\x7B','\x5A','\x74','\x6F','\x55','\x5F','\x75','\x70','\x86','\x4F','\x3D','\x6F','\x3F','\x79','\x81','\x67','\x64','\x3E','\x79','\x56','\x55','\x5F','\x3E','\x56','\x54','\x85','\x87','\x66','\x64','\x79','\x87','\x56','\x55','\x63','\x82','\x56','\x54','\x57','\x83','\x6F','\x76','\x4F','\x84','\x66','\x65','\x53','\x3E','\x67','\x65','\x5E','\x74','\x67','\x55','\x5F','\x86','\x66','\x65','\x67','\x79','\x70','\x40','\x5F','\x7D','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str113[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x86','\x67','\x3F','\x53','\x86','\x67','\x54','\x63','\x81','\x6F','\x3F','\x78','\x74','\x66','\x65','\x63','\x7E','\x6F','\x40','\x63','\x86','\x67','\x54','\x75','\x3E','\x6E','\x60','\x4F','\x7E','\x66','\x64','\x78','\x74','\x70','\x7A','\x63','\x81','\x6F','\x3F','\x42','\x3D','\x67','\x60','\x4F','\x81','\x66','\x60','\x4F','\x76','\x70','\x7A','\x53','\x7B','\x71','\x64','\x63','\x3D','\x71','\x54','\x62','\x4A','\x0D','\x00'};
char str114[] = {'\x64','\x64','\x52','\x74','\x70','\x54','\x53','\x87','\x56','\x55','\x53','\x3E','\x6F','\x54','\x62','\x74','\x66','\x40','\x63','\x80','\x56','\x54','\x5F','\x75','\x6F','\x7B','\x5A','\x74','\x6F','\x54','\x52','\x74','\x71','\x7A','\x79','\x79','\x56','\x53','\x67','\x7D','\x71','\x54','\x46','\x83','\x56','\x54','\x3E','\x79','\x71','\x55','\x5A','\x74','\x66','\x3F','\x52','\x74','\x71','\x54','\x46','\x7D','\x56','\x54','\x5F','\x75','\x6F','\x7B','\x5A','\x74','\x6F','\x54','\x52','\x74','\x71','\x54','\x63','\x3D','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str115[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x5F','\x3E','\x56','\x54','\x3E','\x87','\x6F','\x40','\x57','\x87','\x56','\x55','\x5F','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str116[] = {'\x63','\x55','\x62','\x74','\x71','\x7A','\x63','\x3E','\x72','\x50','\x4F','\x78','\x6E','\x65','\x57','\x79','\x56','\x55','\x53','\x3E','\x71','\x54','\x63','\x87','\x56','\x55','\x4F','\x80','\x71','\x65','\x5A','\x74','\x71','\x64','\x41','\x74','\x6F','\x64','\x63','\x77','\x56','\x54','\x63','\x3D','\x56','\x55','\x53','\x3E','\x67','\x60','\x4F','\x3D','\x71','\x60','\x4F','\x81','\x66','\x65','\x57','\x77','\x6E','\x54','\x63','\x87','\x56','\x54','\x5F','\x86','\x6F','\x3F','\x79','\x3D','\x0D','\x00'};
char str117[] = {'\x5E','\x65','\x57','\x86','\x67','\x65','\x5F','\x79','\x0D','\x00'};
char str118[] = {'\x62','\x65','\x63','\x79','\x56','\x55','\x5F','\x3E','\x56','\x55','\x57','\x79','\x70','\x40','\x5F','\x79','\x70','\x86','\x4F','\x77','\x6E','\x54','\x63','\x43','\x56','\x55','\x5F','\x83','\x6E','\x60','\x4F','\x80','\x66','\x60','\x4F','\x82','\x71','\x64','\x79','\x3D','\x56','\x55','\x53','\x3E','\x66','\x64','\x42','\x78','\x56','\x54','\x63','\x80','\x6F','\x54','\x62','\x74','\x67','\x65','\x5B','\x3D','\x56','\x55','\x4F','\x75','\x70','\x86','\x4F','\x80','\x66','\x5E','\x4A','\x4A','\x0D','\x00'};
char str119[] = {'\x61','\x40','\x63','\x75','\x6E','\x65','\x5A','\x74','\x66','\x7A','\x79','\x79','\x6F','\x76','\x4F','\x87','\x71','\x65','\x56','\x4A','\x0D','\x00'};
char str120[] = {'\x5A','\x51','\x56','\x83','\x5A','\x77','\x4E','\x83','\x5A','\x77','\x52','\x4A','\x0D','\x00'};
char str121[] = {'\x5F','\x54','\x63','\x84','\x71','\x64','\x79','\x87','\x56','\x55','\x53','\x3E','\x66','\x64','\x42','\x78','\x56','\x54','\x5B','\x79','\x70','\x40','\x5E','\x74','\x70','\x54','\x85','\x3E','\x70','\x86','\x4F','\x80','\x71','\x64','\x78','\x74','\x70','\x65','\x63','\x7D','\x56','\x54','\x5F','\x75','\x6F','\x7B','\x5A','\x74','\x71','\x54','\x52','\x74','\x71','\x7A','\x79','\x79','\x56','\x54','\x67','\x75','\x6E','\x65','\x5E','\x74','\x6F','\x54','\x52','\x74','\x6F','\x54','\x46','\x7D','\x0D','\x00'};
char str122[] = {'\x5E','\x65','\x57','\x86','\x67','\x65','\x5F','\x79','\x56','\x55','\x53','\x3E','\x67','\x65','\x5B','\x3D','\x66','\x3F','\x62','\x74','\x71','\x55','\x62','\x74','\x67','\x7A','\x53','\x7D','\x70','\x86','\x4F','\x80','\x66','\x5E','\x4A','\x4A','\x0D','\x00'};
char str123[] = {'\x5F','\x65','\x5B','\x3D','\x71','\x60','\x4F','\x87','\x71','\x65','\x56','\x74','\x67','\x54','\x63','\x3D','\x70','\x7A','\x62','\x74','\x67','\x7A','\x79','\x78','\x67','\x64','\x85','\x79','\x0D','\x00'};
char str124[] = {'\x5F','\x65','\x5B','\x3D','\x66','\x3F','\x62','\x74','\x70','\x65','\x63','\x79','\x56','\x54','\x7D','\x84','\x67','\x65','\x63','\x41','\x56','\x54','\x5B','\x83','\x6F','\x7B','\x5B','\x3E','\x6F','\x55','\x5F','\x79','\x70','\x76','\x4F','\x3D','\x67','\x65','\x5A','\x74','\x6F','\x64','\x53','\x7D','\x6F','\x55','\x5A','\x4A','\x0D','\x00'};
char str125[] = {'\x61','\x40','\x63','\x75','\x6E','\x65','\x5A','\x4A','\x0D','\x00'};
char str126[] = {'\x5F','\x65','\x5E','\x74','\x71','\x54','\x46','\x82','\x56','\x54','\x5F','\x7D','\x70','\x40','\x53','\x3E','\x67','\x60','\x4F','\x78','\x71','\x65','\x56','\x74','\x67','\x65','\x75','\x3D','\x67','\x65','\x57','\x82','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str127[] = {'\x62','\x54','\x53','\x86','\x67','\x64','\x79','\x80','\x0D','\x00'};
char str128[] = {'\x5F','\x7A','\x46','\x3E','\x6E','\x64','\x85','\x80','\x67','\x65','\x56','\x74','\x71','\x54','\x46','\x82','\x56','\x52','\x57','\x80','\x71','\x64','\x63','\x3D','\x6F','\x3F','\x46','\x3D','\x6E','\x4E','\x4A','\x4A','\x0D','\x00'};
char str129[] = {'\x5E','\x3F','\x85','\x7D','\x70','\x65','\x63','\x79','\x70','\x76','\x4F','\x87','\x71','\x65','\x56','\x74','\x71','\x54','\x52','\x74','\x66','\x3F','\x53','\x86','\x71','\x54','\x62','\x74','\x6F','\x64','\x63','\x86','\x67','\x5E','\x4A','\x4A','\x0D','\x00'};
char str130[] = {'\x5A','\x51','\x5E','\x43','\x5A','\x51','\x52','\x43','\x5A','\x51','\x4E','\x4A','\x0D','\x00'};
char str131[] = {'\x62','\x7A','\x63','\x82','\x71','\x55','\x57','\x79','\x70','\x76','\x4F','\x78','\x66','\x64','\x42','\x87','\x56','\x55','\x5F','\x83','\x6F','\x76','\x4F','\x81','\x6E','\x64','\x42','\x7D','\x71','\x54','\x63','\x80','\x0D','\x00'};
char str132[] = {'\x62','\x3F','\x78','\x74','\x71','\x54','\x63','\x87','\x56','\x55','\x5B','\x3E','\x70','\x76','\x4F','\x78','\x67','\x60','\x4F','\x3D','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str133[] = {'\x61','\x40','\x63','\x75','\x6E','\x65','\x5A','\x74','\x66','\x7A','\x53','\x7C','\x56','\x55','\x53','\x3E','\x6F','\x3F','\x78','\x74','\x66','\x7A','\x53','\x7C','\x56','\x55','\x53','\x3E','\x6F','\x3F','\x78','\x4A','\x0D','\x00'};
char str134[] = {'\x5E','\x64','\x85','\x83','\x70','\x7B','\x5A','\x74','\x67','\x54','\x46','\x82','\x6F','\x7A','\x62','\x74','\x71','\x54','\x46','\x82','\x56','\x55','\x5F','\x79','\x6F','\x54','\x63','\x84','\x6E','\x54','\x46','\x82','\x67','\x60','\x4F','\x83','\x6F','\x76','\x4F','\x79','\x66','\x3F','\x46','\x3E','\x71','\x54','\x62','\x74','\x71','\x54','\x46','\x82','\x56','\x55','\x57','\x79','\x70','\x54','\x46','\x82','\x67','\x54','\x63','\x3E','\x70','\x76','\x4F','\x79','\x71','\x50','\x4F','\x83','\x6F','\x76','\x4F','\x3F','\x67','\x65','\x57','\x86','\x66','\x5E','\x4A','\x4A','\x0D','\x00'};
char str135[] = {'\x61','\x64','\x53','\x7D','\x70','\x86','\x4F','\x75','\x70','\x7B','\x57','\x79','\x71','\x54','\x62','\x74','\x6F','\x54','\x52','\x74','\x71','\x54','\x63','\x87','\x56','\x54','\x67','\x75','\x71','\x54','\x79','\x7B','\x71','\x64','\x62','\x74','\x71','\x54','\x53','\x87','\x56','\x54','\x85','\x75','\x56','\x54','\x75','\x75','\x6E','\x64','\x42','\x79','\x0D','\x00'};
char str136[] = {'\x62','\x7A','\x63','\x82','\x67','\x55','\x5B','\x81','\x6F','\x3F','\x78','\x74','\x6F','\x64','\x46','\x82','\x56','\x55','\x5F','\x79','\x6F','\x54','\x63','\x84','\x6E','\x54','\x46','\x82','\x67','\x60','\x4F','\x85','\x71','\x64','\x63','\x87','\x71','\x54','\x5B','\x79','\x56','\x55','\x5F','\x3E','\x56','\x54','\x67','\x75','\x6E','\x65','\x5A','\x74','\x6F','\x54','\x52','\x4A','\x0D','\x00'};
char str137[] = {'\x60','\x7A','\x62','\x74','\x71','\x7A','\x53','\x7D','\x70','\x86','\x4F','\x80','\x67','\x60','\x4F','\x7A','\x66','\x64','\x79','\x86','\x67','\x60','\x4F','\x84','\x6F','\x40','\x63','\x86','\x56','\x55','\x5F','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str138[] = {'\x60','\x54','\x62','\x74','\x6F','\x64','\x53','\x7D','\x70','\x86','\x4F','\x77','\x66','\x60','\x4F','\x87','\x67','\x7A','\x53','\x7D','\x71','\x50','\x4F','\x84','\x66','\x65','\x5A','\x74','\x67','\x54','\x62','\x74','\x67','\x7A','\x85','\x7D','\x70','\x65','\x63','\x79','\x70','\x76','\x4F','\x80','\x67','\x65','\x5A','\x74','\x67','\x3F','\x63','\x82','\x70','\x86','\x4F','\x77','\x6F','\x3F','\x3E','\x81','\x67','\x60','\x4F','\x77','\x66','\x5E','\x4A','\x4A','\x0D','\x00'};
char str139[] = {'\x63','\x54','\x46','\x82','\x56','\x54','\x42','\x3E','\x6F','\x64','\x63','\x86','\x6F','\x86','\x4F','\x81','\x6F','\x3F','\x41','\x74','\x67','\x3F','\x53','\x86','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str140[] = {'\x62','\x7A','\x53','\x77','\x66','\x40','\x57','\x83','\x66','\x3F','\x75','\x79','\x56','\x55','\x57','\x75','\x66','\x3F','\x5B','\x86','\x6F','\x3F','\x5B','\x7C','\x67','\x60','\x4F','\x86','\x66','\x64','\x5B','\x77','\x70','\x7A','\x46','\x77','\x6E','\x54','\x62','\x74','\x70','\x55','\x63','\x3D','\x66','\x64','\x79','\x82','\x0D','\x00'};
char str141[] = {'\x60','\x7A','\x62','\x74','\x71','\x7A','\x53','\x7D','\x70','\x86','\x4F','\x80','\x67','\x60','\x4F','\x7A','\x66','\x64','\x79','\x86','\x67','\x60','\x4F','\x84','\x6F','\x40','\x63','\x86','\x56','\x55','\x5F','\x83','\x6E','\x5E','\x4A','\x4A','\x0D','\x00'};
char str142[] = {'\x60','\x64','\x84','\x74','\x71','\x7A','\x52','\x74','\x71','\x54','\x53','\x86','\x70','\x7A','\x79','\x3F','\x67','\x65','\x56','\x74','\x67','\x54','\x63','\x87','\x56','\x54','\x57','\x86','\x6E','\x64','\x5B','\x83','\x6F','\x54','\x63','\x87','\x56','\x54','\x7D','\x79','\x56','\x55','\x67','\x75','\x6E','\x65','\x5A','\x74','\x70','\x55','\x57','\x79','\x6F','\x7A','\x5F','\x86','\x67','\x60','\x4F','\x80','\x67','\x60','\x4F','\x77','\x70','\x7A','\x79','\x77','\x0D','\x00'};
char str143[] = {'\x61','\x54','\x52','\x74','\x66','\x7A','\x46','\x81','\x66','\x7A','\x62','\x74','\x6F','\x54','\x53','\x77','\x70','\x7B','\x79','\x81','\x6F','\x3F','\x71','\x79','\x6F','\x7A','\x62','\x74','\x66','\x65','\x5F','\x3D','\x67','\x64','\x42','\x3D','\x6E','\x64','\x46','\x82','\x0D','\x00'};
char str144[] = {'\x63','\x7A','\x46','\x3E','\x70','\x86','\x4F','\x79','\x71','\x54','\x63','\x87','\x56','\x54','\x57','\x7D','\x67','\x64','\x41','\x74','\x70','\x40','\x63','\x86','\x56','\x54','\x85','\x75','\x56','\x54','\x3E','\x79','\x70','\x40','\x5B','\x75','\x67','\x3F','\x63','\x86','\x6E','\x64','\x62','\x74','\x67','\x54','\x62','\x74','\x61','\x64','\x79','\x7F','\x66','\x60','\x4F','\x80','\x66','\x64','\x5B','\x7C','\x67','\x65','\x7C','\x74','\x71','\x64','\x41','\x74','\x6F','\x64','\x63','\x87','\x70','\x3F','\x53','\x7B','\x67','\x60','\x4F','\x75','\x70','\x55','\x57','\x79','\x70','\x86','\x4F','\x80','\x67','\x60','\x4F','\x76','\x6E','\x65','\x4E','\x74','\x70','\x3F','\x46','\x82','\x6F','\x40','\x57','\x79','\x0D','\x00'};
char str145[] = {'\x62','\x54','\x53','\x86','\x66','\x3F','\x62','\x74','\x70','\x65','\x63','\x79','\x56','\x55','\x5B','\x7D','\x56','\x55','\x67','\x83','\x71','\x65','\x5A','\x74','\x6F','\x54','\x62','\x74','\x6F','\x54','\x53','\x77','\x6E','\x54','\x63','\x43','\x56','\x54','\x53','\x3F','\x66','\x64','\x42','\x3D','\x56','\x54','\x57','\x75','\x6E','\x50','\x4F','\x77','\x66','\x60','\x4F','\x81','\x66','\x65','\x57','\x77','\x6E','\x54','\x62','\x74','\x70','\x54','\x53','\x87','\x0D','\x00'};
char str146[] = {'\x5E','\x3F','\x46','\x81','\x70','\x54','\x46','\x87','\x67','\x65','\x7C','\x74','\x71','\x7A','\x46','\x3D','\x70','\x7A','\x62','\x74','\x66','\x3F','\x46','\x78','\x67','\x60','\x4F','\x87','\x67','\x64','\x5B','\x86','\x67','\x65','\x5E','\x74','\x67','\x65','\x5E','\x74','\x67','\x65','\x5E','\x74','\x71','\x54','\x63','\x86','\x6F','\x64','\x79','\x82','\x67','\x65','\x7C','\x74','\x70','\x54','\x53','\x86','\x56','\x54','\x5F','\x83','\x71','\x65','\x7D','\x79','\x0D','\x00'};
char str147[] = {'\x5F','\x54','\x46','\x3E','\x72','\x7A','\x62','\x4A','\x0D','\x00'};
char str148[] = {'\x63','\x7A','\x46','\x3E','\x70','\x86','\x4F','\x75','\x71','\x7A','\x63','\x43','\x56','\x51','\x56','\x3F','\x5A','\x51','\x4E','\x74','\x6F','\x7A','\x46','\x3E','\x71','\x7A','\x63','\x75','\x71','\x65','\x74','\x74','\x6F','\x64','\x63','\x87','\x70','\x3F','\x53','\x7B','\x67','\x65','\x5A','\x74','\x70','\x54','\x63','\x82','\x70','\x3F','\x63','\x43','\x56','\x54','\x52','\x74','\x66','\x65','\x57','\x77','\x6E','\x54','\x79','\x3F','\x67','\x65','\x56','\x4A','\x0D','\x00'};
char str149[] = {'\x62','\x7A','\x63','\x77','\x71','\x60','\x4F','\x7C','\x6E','\x64','\x63','\x86','\x56','\x54','\x52','\x74','\x5A','\x77','\x57','\x56','\x5B','\x61','\x52','\x74','\x6F','\x40','\x63','\x75','\x6E','\x65','\x5A','\x74','\x66','\x3F','\x63','\x87','\x71','\x50','\x4F','\x5E','\x70','\x7A','\x46','\x7A','\x66','\x64','\x42','\x75','\x71','\x54','\x79','\x83','\x6F','\x76','\x4F','\x54','\x6F','\x3F','\x42','\x7F','\x72','\x60','\x4F','\x80','\x66','\x60','\x4F','\x76','\x6E','\x64','\x63','\x82','\x56','\x54','\x46','\x3E','\x56','\x54','\x57','\x7D','\x67','\x64','\x41','\x74','\x70','\x3F','\x53','\x80','\x71','\x65','\x5E','\x74','\x66','\x7A','\x79','\x79','\x6F','\x74','\x4A','\x4A','\x0D','\x00'};
char str150[] = {'\x62','\x7A','\x63','\x77','\x71','\x60','\x4F','\x7C','\x6E','\x64','\x63','\x86','\x56','\x54','\x52','\x74','\x5A','\x77','\x57','\x56','\x5B','\x77','\x52','\x74','\x6F','\x40','\x63','\x75','\x6E','\x65','\x5A','\x74','\x66','\x7A','\x63','\x76','\x67','\x60','\x4F','\x77','\x67','\x65','\x5B','\x3D','\x56','\x54','\x85','\x75','\x56','\x54','\x3E','\x75','\x6F','\x64','\x53','\x82','\x56','\x54','\x5F','\x79','\x56','\x53','\x67','\x7D','\x71','\x54','\x46','\x83','\x56','\x54','\x5B','\x75','\x56','\x54','\x67','\x75','\x6E','\x65','\x5E','\x74','\x71','\x64','\x42','\x79','\x56','\x54','\x75','\x79','\x71','\x65','\x57','\x79','\x56','\x55','\x5F','\x3E','\x56','\x54','\x3E','\x79','\x56','\x54','\x3E','\x75','\x6F','\x7B','\x53','\x3E','\x67','\x65','\x5A','\x74','\x67','\x54','\x63','\x7E','\x66','\x5E','\x4A','\x4A','\x0D','\x00'};
char str151[] = {'\x63','\x55','\x62','\x74','\x6F','\x64','\x62','\x74','\x6F','\x64','\x53','\x82','\x70','\x65','\x63','\x79','\x70','\x86','\x4F','\x3D','\x71','\x60','\x4F','\x81','\x67','\x60','\x4F','\x81','\x66','\x64','\x42','\x85','\x71','\x64','\x63','\x87','\x0D','\x00'};
char str152[] = {'\x61','\x3F','\x74','\x74','\x6F','\x54','\x52','\x74','\x6F','\x54','\x52','\x74','\x70','\x65','\x63','\x79','\x70','\x40','\x5F','\x77','\x67','\x60','\x4F','\x85','\x71','\x64','\x62','\x74','\x71','\x55','\x62','\x74','\x6F','\x64','\x53','\x87','\x56','\x54','\x3E','\x7D','\x70','\x86','\x4F','\x3F','\x6E','\x65','\x67','\x79','\x6F','\x64','\x63','\x82','\x71','\x50','\x4F','\x78','\x67','\x64','\x3E','\x75','\x6E','\x64','\x41','\x74','\x67','\x40','\x57','\x83','\x70','\x86','\x4F','\x76','\x6E','\x65','\x5B','\x83','\x71','\x65','\x5A','\x74','\x6F','\x40','\x62','\x74','\x71','\x55','\x62','\x74','\x70','\x3F','\x53','\x7D','\x70','\x84','\x4A','\x4A','\x0D','\x00'};
char str153[] = {'\x5E','\x64','\x85','\x83','\x70','\x7B','\x5A','\x74','\x66','\x3F','\x63','\x87','\x71','\x50','\x4F','\x76','\x6F','\x3F','\x41','\x74','\x66','\x3F','\x52','\x74','\x71','\x7A','\x52','\x74','\x6F','\x54','\x52','\x74','\x71','\x54','\x63','\x87','\x56','\x54','\x5B','\x75','\x6F','\x54','\x3E','\x79','\x0D','\x00'};
char str154[] = {'\x63','\x55','\x62','\x74','\x71','\x7A','\x53','\x87','\x56','\x54','\x85','\x75','\x56','\x54','\x67','\x79','\x70','\x7A','\x3E','\x79','\x70','\x76','\x4F','\x3D','\x66','\x60','\x4F','\x7B','\x71','\x64','\x63','\x3E','\x6F','\x54','\x62','\x4A','\x0D','\x00'};
char str155[] = {'\x5F','\x7A','\x53','\x3D','\x66','\x64','\x84','\x74','\x71','\x54','\x79','\x79','\x6F','\x7B','\x5B','\x3D','\x6F','\x3F','\x78','\x74','\x70','\x55','\x57','\x79','\x71','\x50','\x4F','\x7A','\x66','\x65','\x63','\x3D','\x56','\x55','\x53','\x3E','\x67','\x60','\x4F','\x7E','\x71','\x54','\x62','\x74','\x70','\x54','\x53','\x86','\x6F','\x54','\x62','\x4A','\x0D','\x00'};
char str156[] = {'\x63','\x55','\x62','\x74','\x71','\x7A','\x53','\x87','\x56','\x55','\x4F','\x75','\x70','\x40','\x5B','\x79','\x70','\x76','\x4F','\x3D','\x66','\x60','\x4F','\x3F','\x6E','\x64','\x62','\x74','\x67','\x54','\x53','\x82','\x70','\x86','\x4F','\x80','\x67','\x60','\x4F','\x82','\x6F','\x3F','\x79','\x86','\x0D','\x00'};
char str157[] = {'\x62','\x54','\x53','\x86','\x66','\x3F','\x62','\x74','\x70','\x65','\x63','\x79','\x56','\x54','\x7D','\x79','\x56','\x55','\x67','\x75','\x6E','\x65','\x5A','\x74','\x71','\x54','\x62','\x74','\x66','\x40','\x57','\x79','\x71','\x7A','\x63','\x86','\x56','\x54','\x85','\x79','\x70','\x86','\x4F','\x42','\x67','\x65','\x63','\x41','\x0D','\x00'};

typedef BOOL	(*bee)				();
typedef BOOL	(*beep)				(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED);
typedef BOOL	(*beepbip)			(HANDLE, PBOOL);
typedef HANDLE	(*bipbeep)			();
typedef size_t	(*biipbeep)			(const char *str);
typedef void	(*biiipbeep)		(DWORD);
typedef void	(*biiipbeeep)		(LPCSTR);
typedef DWORD	(*biiiipbeeep)		();
typedef HWND	(*biiiiipbeeep)		(LPCSTR, LPCSTR);
typedef BOOL	(*biiiiipbeeeep)	(HWND);
typedef int		(*biiiiipbeeeeep)	(HWND,LPSTR,int);
typedef BOOL	(*biiiiipbeeeeeep)	(HANDLE,LPCVOID,DWORD,LPDWORD, LPOVERLAPPED);
typedef void*	(*biiiiipbeeeeeeep)	(size_t);
typedef void	(*tut)				(DWORD);
typedef void*	(*tutut)			(void *,int,size_t);
typedef BOOL	(*tututut)			(OSVERSIONINFO *);
typedef UINT	(*tutututut)		(LPCTSTR);
typedef LRESULT	(*tututututut)		(HWND, UINT, WPARAM , LPARAM);
typedef BOOL	(*tutututututut)	(UINT,UINT,PVOID ,UINT);
typedef UINT	(*ta)				();
typedef BOOL	(*tata)				();
typedef void	(*tatata)			(char[]);
typedef void	(*tatatata)			(int*, int);
typedef unsigned char * (*tatatatata)(const char *, int);

typedef void	(*bim)				(); //_tzset
typedef int		(*bimbam)			(char *,size_t); //_strtime_s
typedef int		(*bimbamboum)		(char *,size_t); //_strdate_s
typedef int		(*bimbamboumbim)	(const char *,const char *,size_t); //strncmp
typedef BOOL	(*bimbamboumbimbam)	(WNDENUMPROC,LPARAM); //EnumWindows
typedef BOOL	(*bimbamboumbimbamboum)(LPPOINT); //GetCursorPos

char *derot(const char *data, int input_length, int d) {

	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}

	//printf("data : %s\n", input_length);
	//printf("il : %d\n", data);

	biiiiipbeeeeeeep tut = (biiiiipbeeeeeeep) ((char *) Beep - 64518372);
	char *outp = (char *) tut(256);

	for(int i = 0; i < input_length; i++){
		//printf("l : %c %c\n", data[i], data[i]-13);
		outp[i] = data[i]-d;
	}
	return outp;
}

BOOL is_not_debbugging(){

	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}

	/* dont forget to uncomment return 0*/

	//IsDebuggerPresent 33832
	bee bip = (bee) ((char *) Beep - 33832);
	if(bip()){
		//printf("DEBUG 1 detecté\n");
		return 0;
	}

	BOOL beeeeeeeep;
	//GetCurrentProcess 171138
	//CheckRemoteDebuggerPresent -146297
	beepbip beeeeeeeeep = (beepbip) ((char *) Beep + 146297);
	bipbeep beeeeeeeeeep = (bipbeep) ((char *) Beep - 171138);
	beeeeeeeeep( beeeeeeeeeep(), &beeeeeeeep);
	if(beeeeeeeep){
		//printf("DEBUG 2 detecté\n");
		return 0;
	}

	char * peb;
	__asm{
		mov ebx, 0x30
		xor ecx, ecx
		mov eax, fs:[ebx+ecx]
		;mov eax, fs:[0x30]
		mov peb, eax
	};

	if(peb[2]){
		//printf("DEBUG 3 detecté\n");
		return 0;
	}

	if(peb[104] & 0x70){
		//printf("DEBUG 4 detecté\n");
		return 0;
	}

	//biipbeep
	//strlen 64574007

	//biiipbeep
	//SetLastError -951065

	//biiipbeeep
	//OutputDebugStringA -146897

	//biiiipbeeep
	//GetLastError -951050

	
	biipbeep beeeeeeeeeeep = (biipbeep) ((char *) Beep - 64574007);
	biiipbeep beeeeeeeeeeeep = (biiipbeep) ((char *) Beep + 951065);
	biiipbeeep beeeeeeeeeeeeep = (biiipbeeep) ((char *) Beep + 146897);
	biiiipbeeep beeeeeeeeeeeeeep = (biiiipbeeep) ((char *) Beep + 951050);
	

	//works even if is launched in console
	beeeeeeeeeeeep(0);
	beeeeeeeeeeep = (biipbeep) ((char *) Beep - 64574007);
	// must be beeeeeeeeeeeeep  but when beeeeeeeeeeeeep is replace, it's not working
	char * u = derot(str10, beeeeeeeeeeep(str10), 13);
	char * c = (char *) base64_decode(u, beeeeeeeeeeep(u));
	((biiipbeeep) ((char *) Beep + 146897))((LPCSTR) c);


	if (beeeeeeeeeeeeeep() != 0){
		//printf("DEBUG 5 detecté\n");
		return 0;
	}

	//biiiiipbeeep
	// FindWindowA -28772298
	// printf("%d\n", ((unsigned int) Beep) - ((unsigned int) FindWindowA));
	//biipbeep beeeeeeeeeeep = (biipbeep) ((char *) Beep - 64574007);
	//printf("%x %x\n", ((biiiiipbeeep) ((char *) Beep + 28772298)), FindWindowA);

	// IDA / 010 Editor
	char * bipeu = derot(str110, ((biipbeep) ((char *) Beep - 64574007))(str110), 13);
	char * bipe = (char *) base64_decode(bipeu, ((biipbeep) ((char *) Beep - 64574007))(bipeu));
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(bipe, NULL)){
		//printf("DEBUG 6 detecté\n");
		return 0;
	}

	// WinDbg
	char * biipu = derot(str30, ((biipbeep) ((char *) Beep - 64574007))(str30), 13);
	char * biip = (char *) base64_decode(biipu, ((biipbeep) ((char *) Beep - 64574007))(biipu));
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(biip, NULL)){
		//printf("DEBUG 7 detecté\n");
		return 0;
	}
	
	// Console
	char * biiipu = derot(str40, ((biipbeep) ((char *) Beep - 64574007))(str40), 13);
	char *biiip = (char *) base64_decode(biiipu, ((biipbeep) ((char *) Beep - 64574007))(biiipu));
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(biiip, NULL)){
		//printf("DEBUG 8 detecté\n");
		return 0;
	}

	// Gestionnaire de fichiers
	char * biiiipu = derot(str100, ((biipbeep) ((char *) Beep - 64574007))(str100), 13);
	char * biiiip = (char *) base64_decode(biiiipu, ((biipbeep) ((char *) Beep - 64574007))(biiiipu));
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(biiiip, NULL)){
		//printf("DEBUG 9 detecté\n");
		return 0;
	}

	char * biiiiipu = derot(str60, ((biipbeep) ((char *) Beep - 64574007))(str60), 13);
	char * biiiiip = (char *) base64_decode(biiiiipu, ((biipbeep) ((char *) Beep - 64574007))(biiiiipu));
	// OllyDbg
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(biiiiip, NULL)){
		//printf("DEBUG 10 detecté\n");
		return 0;
	}

	char * biiiiiipu = derot(str70, ((biipbeep) ((char *) Beep - 64574007))(str70), 13);
	char *biiiiiip = (char *) base64_decode(biiiiiipu, ((biipbeep) ((char *) Beep - 64574007))(biiiiiipu));
	// MASM32
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(biiiiiip, NULL)){
		//printf("DEBUG 11 detecté\n");
		return 0;
	}

	char * biiiiiiipu = derot(str80, ((biipbeep) ((char *) Beep - 64574007))(str80), 13);
	char * biiiiiiip = (char *) base64_decode(biiiiiiipu, ((biipbeep) ((char *) Beep - 64574007))(biiiiiiipu));
	// DebugView
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(biiiiiiip, NULL)){
		//printf("DEBUG 12 detecté\n");
		return 0;
	}

	char * biiiiiiiipu = derot(str90, ((biipbeep) ((char *) Beep - 64574007))(str90), 13);
	char * biiiiiiiip = (char *) base64_decode(biiiiiiiipu, ((biipbeep) ((char *) Beep - 64574007))(biiiiiiiipu));
	// WinObj
	if (((biiiiipbeeep) ((char *) Beep + 28772298))(biiiiiiiip, NULL)){
		//printf("DEBUG 13 detecté\n");
		return 0;
	}
	return TRUE;
}

BOOL CALLBACK ewp(HWND hWnd, long lParam) {

	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}


    //char buff[255], buff2[255];;

	//biiiiipbeeeep
	// IsWindowVisible -28779302

	//biiiiipbeeeeep
	// GetWindowTextA -28812884

	//biiiiipbeeeeep
	// GetClassNameA -28801352

	biiiiipbeeeep tut = (biiiiipbeeeep) ((char *) Beep + 28779302);

    if (tut(hWnd)) {
		nb_windows_opened = nb_windows_opened + 1;
    }

    return TRUE;
}

void affiche(char s[]){

	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}

	//biiiiipbeeeeeep
	// WriteFile 157720
	biiiiipbeeeeeep tut = (biiiiipbeeeeeep) ((char *) Beep - 157720);
	biipbeep beeeeeeeeeeep = (biipbeep) ((char *) Beep - 64574007);
    DWORD dd;
	tut((HANDLE)0x00000007, s, (DWORD)beeeeeeeeeeep(s), &dd, NULL);
}

UINT gnsl(void){

	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}

   HWND hdlMsWheel;
   UINT ucNumLines=3;  // 3 is the default
   OSVERSIONINFO osversion;
   UINT uiMsh_MsgScrollLines;

	tutut beep = (tutut) ((char *) Beep - 64574615);
	tututut beepbeep = (tututut) ((char *) Beep - 183314);
	tutututut beepbeepbeep = (tutututut) ((char *) Beep + 28718109);
	tututututut beepbeepbeepbeep = (tututututut) ((char *) Beep + 28776323);
	tutututututut beepbeepbeepbeepbeep = (tutututututut) ((char *) Beep + 28713967);


   beep(&osversion, 0, sizeof(osversion));
   osversion.dwOSVersionInfoSize =sizeof(osversion);
   beepbeep(&osversion);

   if ((osversion.dwPlatformId == VER_PLATFORM_WIN32_WINDOWS) || ( (osversion.dwPlatformId == VER_PLATFORM_WIN32_NT) && (osversion.dwMajorVersion < 4) )){
        hdlMsWheel = ((biiiiipbeeep) ((char *) Beep + 28772298))((LPCSTR)MSH_WHEELMODULE_CLASS, (LPCSTR)MSH_WHEELMODULE_TITLE);
        if (hdlMsWheel){
           uiMsh_MsgScrollLines = beepbeepbeep(MSH_SCROLL_LINES);
           if (uiMsh_MsgScrollLines)
                ucNumLines = (int)beepbeepbeepbeep(hdlMsWheel, uiMsh_MsgScrollLines, 0, 0);
        }
   } 
   return ucNumLines;
}

void ccpuid(int CPUInfo[4], int InfoType){
	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}

 __asm {
     mov    esi, CPUInfo
     mov    eax, InfoType
     xor    ecx, ecx  
     cpuid  
     mov    dword ptr [esi +  0], eax
     mov    dword ptr [esi +  4], ebx  
     mov    dword ptr [esi +  8], ecx  
     mov    dword ptr [esi + 12], edx  
  }
}

BOOL igosvm(){
	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}
	unsigned int cpuInfo[4];
    ccpuid((int*)cpuInfo,1);
    return ((cpuInfo[2] >> 31) & 1) == 1;
}

unsigned char *base64_decode(const char *data,
                             int input_length) {
	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}

	char encoding_table[] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                             'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
                             'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                             'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
                             'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                             'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
                             'w', 'x', 'y', 'z', '0', '1', '2', '3',
                             '4', '5', '6', '7', '8', '9', '+', '/'};

	//biiiiipbeeeeeeep
	// malloc 64518372
	biiiiipbeeeeeeep tut = (biiiiipbeeeeeeep) ((char *) Beep - 64518372);

	char *decoding_table = (char *) tut(256);

    for (int i = 0; i < 64; i++)
        decoding_table[(unsigned char) encoding_table[i]] = i;

    if (input_length % 4 != 0) return NULL;

    int output_length = input_length / 4 * 3;
    if (data[input_length - 1] == '=') output_length--;
    if (data[input_length - 2] == '=') output_length--;

    unsigned char *decoded_data = (unsigned char *) tut(output_length);
    if (decoded_data == NULL) return NULL;

    for (int i = 0, j = 0; i < input_length;) {

        int sextet_a = data[i] == '=' ? 0 & i++ : decoding_table[data[i++]];
        int sextet_b = data[i] == '=' ? 0 & i++ : decoding_table[data[i++]];
        int sextet_c = data[i] == '=' ? 0 & i++ : decoding_table[data[i++]];
        int sextet_d = data[i] == '=' ? 0 & i++ : decoding_table[data[i++]];

        int triple = (sextet_a << 3 * 6)
        + (sextet_b << 2 * 6)
        + (sextet_c << 1 * 6)
        + (sextet_d << 0 * 6);

        if (j < output_length) decoded_data[j++] = (triple >> 2 * 8) & 0xFF;
        if (j < output_length) decoded_data[j++] = (triple >> 1 * 8) & 0xFF;
        if (j < output_length) decoded_data[j++] = (triple >> 0 * 8) & 0xFF;
    }

	decoded_data[output_length] = '\0';
    return decoded_data;
}



DWORD beepArray[] = {
	// ######## Block 1 ####### //
	1046,500,//C6 Do
	0,200,
	783,200,//C5 Sol
	622,300,//C5 Ré#
	783,300,//C5 Sol
	0,200,
	523,700,//C5 Do
	0,1000,
	// ######## Block 1 ####### //
	1046,500,//C6 Do
	0,200,
	783,200,//C5 Sol
	622,300,//C5 Ré#
	783,300,//C5 Sol
	0,200,
	523,700,//C5 Do
	0,1000,
	// ######## Block 2 ####### //
	932,500,//C5 La#
	0,100,
	880,200,//C5 La
	783,300,//C5 Sol
	880,400,//C5 La
	0,200,
	587,600,//C5 Ré
	0,1000,

	// ######## Block 1 ####### //
	1046,500,//C6 Do
	0,200,
	783,200,//C5 Sol
	622,300,//C5 Ré#
	783,300,//C5 Sol
	0,200,
	523,700,//C5 Do
	0,1000,
	// ######## Block 1 ####### //
	1046,500,//C6 Do
	0,200,
	783,200,//C5 Sol
	622,300,//C5 Ré#
	783,300,//C5 Sol
	0,200,
	523,700,//C5 Do
	0,1000,
	// ######## Block 2 ####### //
	932,500,//C5 La#
	0,100,
	880,200,//C5 La
	783,300,//C5 Sol
	880,400,//C5 La
	0,200,
	587,600,//C5 Ré
	0,1000,

	// ######## Block 3 ####### //
	880,400,//C6 La
	783,220,//C5 Sol
	698,400,//C5 Fa
	523,700,//C5 Do
	0,200,
	// ######## Block 3 ####### //
	880,400,//C6 La
	783,220,//C5 Sol
	698,400,//C5 Fa
	523,700,//C5 Do
	0,685,
	0,157,
	0,720
};
 
UINT jmjocat(){

	//fake return
	__asm{
		push eax
		push ecx    
		push edx    
		mov ecx, esp
		mov esp, ebp
		pop ebp          
		pop eax         
		mov edx, j4+6
		push edx                     
		push edx
		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		push    ebp                         
		mov     ebp, esp             
		xor     eax, eax             
		cmp     eax, eax             				
											
		je      j0           
		add     eax,        0xDEAD
		cmp     eax,        edi             
		je      j1                          
		add     eax,        0xCAFE          
		cmp     eax,        esi             
		je      j2             
		add     eax,        0xCACA
		cmp     eax,        edx             
		je      j3         
		add     eax,        0xBEEF
		cmp     eax,        ecx             
		je      j4                          
		jmp     24[ eax ]                   

		j0:
			jmp     16[ ebx ]               
    
		j1:
			jmp     48[ ecx ]               
        
		j2:
			jmp     64[ edx ]               
        
		j3:
			jmp     128[ edx ]              
        
		j4:
			jmp     256[ eax ]           
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		pop     edx                         
		push    eax                         
		push    ebp                         
		mov     ebp,        esp             
		mov     esp,        ecx             
		pop     edx                         
		pop     ecx                         
		pop     eax                         


		push    eax                                      
		pop     eax                     
	}

	//tut
	// Sleep 218833
	//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) Sleep));
	//tut beep = (tut) ((char *) Beep - 218833);
	//printf("%x %x\n", beep, Sleep);
	while(1){
		int i = 0;
		//printf("%d %d \n", i, sizeof beepArray / sizeof beepArray[0]);
		while (i < sizeof beepArray / sizeof beepArray[0]){
			//printf("%d %d \n", i, sizeof beepArray / sizeof beepArray[0]);
			if (beepArray[i] == 0) {
				Sleep(beepArray[i+1]);
			} else {
				Beep(beepArray[i], beepArray[i+1]);
			}
			i+=2;
		}
	}
    return 0;
}

int _tmain(int argc, _TCHAR* argv[]){

	printf("%x %x\n", ((bimbamboumbimbamboum) ((char *) Beep + 28777527)), GetCursorPos);

	/*char s[] = {'\x60','\x54','\x63','\x80','\x6F','\x54','\x45','\x80','\x56','\x55','\x71','\x83','\x70','\x7A','\x85','\x78','\x56','\x50','\x52','\x4A','\x0D','\x00'};
	printf("%d\n", strlen(s));
	char * unrot = derot(s, strlen(s));
	while(1);*/


	/**********************************************/
	/* beep beeeeeep                              */
	/*const unsigned char s[] = "Bonjour, le monde !";	
    DWORD dd;
	int tut = beepArray[117]*1000 + beepArray[119];
	char *beepbeep = (char *) Beep;
	beep tutut = (beep) (beepbeep - tut);
	tutut((HANDLE)0x00000007, s, (DWORD)strlen((char*) s), &dd, NULL);*/
	//playOxygenePart4();

	/**********************************************/
	/* base64 decode                    */
	
	/*char * b64s = "Qm9uam91ciwgbGUgbW9uZGUgIQ==";
	unsigned char * base64IO = base64_decode(b64s, strlen(b64s));
	printf("b64d : %s\n", base64IO);

	printf("##########################\n");*/

	// sort la chaine encodée (ici Hello, world ! en hexa ) xoré avec le code de la fonction Beep
	/*char str[] = {'\x53','\x65','\x4B','\x41','\x6D','\x57','\x30','\x67','\x64','\x47','\x68','\x6C','\x49','\x47','\x4E','\x79','\x5A','\x57','\x56','\x77','\x5A','\x58','\x49','\x73','\x49','\x47','\x4E','\x68','\x64','\x47','\x4E','\x6F','\x49','\x47','\x31','\x6C','\x49','\x47','\x6C','\x6D','\x49','\x48','\x6C','\x76','\x64','\x53','\x42','\x6A','\x59','\x57','\x34','\x3D','\x00'};
	printf("str = %s\n", str);
	for(int i = 0; i<strlen(str); i++) {
		printf("'\\x%x',", str[i] ^= 42);
	}*/
	// => '\x44','\x5F','\x4F','\x69','\x79','\x5B','\x25','\x6D','\x56','\x68','\x45','\x54','\x40','\x49','\x5D','\x4D','\x6E','\x6B','\x6C','\x17',
	// /!\ attention, il manque le \x00


	// base 64 xored with Beep string to clear
	/*char b64hexs[] = {'\x44','\x5F', '\x4F','\x69','\x79','\x5B','\x25','\x6D','\x56','\x68','\x45','\x54','\x40','\x49','\x5D','\x4D','\x6E','\x6B','\x6C','\x17','\x00'};

	printf("\nb1 : %s\n", b64hexs);
	for(int i = 0; i<strlen(b64hexs); i++) b64hexs[i] ^= (int) Beep+i;
	printf("b2 : %s\n", b64hexs);
	unsigned char * clear = base64_decode(b64hexs, strlen(b64hexs));
	printf("b3 : %s\n", clear);
	for(int i = 0; i<strlen(b64hexs); i++) b64hexs[i] ^= (int) Beep+i;
	printf("b4 : %s\n", b64hexs);
	//b1 : ym|YHmYcbN\IGRAcio
	//b2 : SGVsbG8sIHdvcmxkICE=
	//b3 : Hello, world !
	//b4 : ym|YHmYcbN\IGRAcio

	while(1);
	return 1;*/
	
	/**********************************************/
	/* Vérifie l'intégrité de la mémoire du prgm  */
	/* /!\ Il faut modifier l'étiquette a et      */
	/* recopier le code							  */
	/*__asm{
		mov eax, 0x00401355
		xor ebx, ebx
		mov edi, 0
		a:
		add ebx, [eax]
		add eax, 1
		inc edi
		cmp edi, 100
		jne a
		cmp ebx, [checksum]
		jne prgmout
	}*/

	/**********************************************/
	/* Condition : Ne doit pas être dans une VM   */
	/*if (! isGuestOSVM()){
		printf("Le système n'est pas une VM : OK\n");
	}else{
		printf("Le système est une VM : Not OK\n");
	}*/

	//FAIT
	/**********************************************/
	/* Condition : La VM doit tourner depuis      */
	/* au moins 1234567890 millis (~343 heures)   */
	/*DWORD tc = GetTickCount();
	if (tc > 1234567890){
		printf("Le système est allumé depuis suffisamment de temps : OK\n");
	}else{
		printf("Le système n'est pas allumé depuis suffisamment de temps : Not OK\n");
	}*/

	//printf("\naddr = %p", IsDebuggerPresent);
	//printf("\naddr = %p", WriteFile);

	/**********************************************/
	/* Condition : La souris doit être placée     */
	/* aux coordonnées (65, 65) pour les		  */
	/* coordonnées ('A', 'A')                     */
	/*POINT p;
	GetCursorPos(&p);
	if (p.x == 65 && p.y == 65){
		printf("La souris est à la bonne place : OK\n");
	}else{
		printf("La souris n'est pas à la bonne place : Not OK\n");
	}*/

	//FAIT
	/**********************************************/
	/* Random fonction qui compile mais qui sert  */
	/* à rien                                     */
	/* ajouté à is_not_debugging() car appelée    */
	/* plusieurs fois							  */
	/*int nb = GetNumScrollLines();
	printf("NumScrollLines : %d\n",nb);*/

	// FAIT
	/**********************************************/
	/* Condition : Plus de 500 fenêtres ouvertes  */
	/*EnumWindows(EnumWindowsProc, 0);
	if(nb_windows_opened >= 500){
		printf("Enough windows are opened (%d) : OK\n", nb_windows_opened);
	}else{
		printf("Not enough windows are opened (%d) : Not OK\n", nb_windows_opened);
	}*/

	//FAIT
	/**********************************************/
	/* Condition : heure actuelle = 04h01 du matin*/
	/*char ostime[128], osdate[128];
    _tzset();
	
	_strtime_s( ostime, 128 );
    _strdate_s( osdate, 128 );

	if(strncmp(osdate, "02/01/21", 10) == 0 && strncmp(ostime, "14:46:30", 8) == 0){
		printf("Time Comparison is OK\n");
	}else{
		printf("Time Comparison is Not OK\n");
	}*/

	/**********************************************/
	/* Condition : n'est pas en train de debugger */
	/* Ainsi que certaines fenêtres ouvertes	  */
	/* Etant donné qu'on est tous sur la meme	  */
	/* machine, on ajoute le fait que tous les    */
	/* débugger installés ne doivent pas être     */
	/* ouvertes(w/ les classnames->inchangeables) */
	// https://github.com/ThomasThelen/AntiDebugging/

	//FAIT
	/*if(is_not_debbugging()){
		printf("Is Not Debugging : OK\n");
	}else{
		printf("Is Debugging : Not OK\n");
	}*/

	/**********************************************/
	/* implémentation complète					  */ 

	//ta
	//GetNumScrollLines 2084791959

	//tata
	//is_not_debbugging 2084793111

	//tatata
	//affiche 2084792135

	//tatatata
	//ccpuid 2084791959

	//tata
	//isGuestOSVM 2084791831

	//tatatatata
	//base64_decode 2084791655

	//ta
	//playOxygenePart4 2084790599

	/*printf("%d\n", ((unsigned int) Beep) - ((unsigned int) is_not_debbugging));
	printf("%d\n", ((unsigned int) Beep) - ((unsigned int) affiche));
	printf("%d\n", ((unsigned int) Beep) - ((unsigned int) ccpuid));
	printf("%d\n", ((unsigned int) Beep) - ((unsigned int) isGuestOSVM));
	printf("%d\n", ((unsigned int) Beep) - ((unsigned int) base64_decode));
	printf("%d\n", ((unsigned int) Beep) - ((unsigned int) playOxygenePart4));*/
	//printf("%x %d\n", Beep, ((unsigned int) Beep) - ((unsigned int) EnumWindows));// 7c837b17

	__asm{
		mov eax, 0x00401EE0
		xor ebx, ebx
		mov edi, 0
		a:
		add ebx, [eax]
		add eax, 1
		inc edi
		cmp edi, 1000
		jne a
		cmp ebx, [checksum]
		jne bepbebeppepbpebepbpe
	}
	
	ta bip = (ta) ((char *) Beep - 2084791959);
	tata bipbip = (tata) ((char *) Beep - 2084793111);
	tatata bipbipbip = (tatata) ((char *) Beep - 2084792135);
	tatatata bipbipbipbip = (tatatata) ((char *) Beep - 2084791959);
	tata bipbipbipbipbip = (tata) ((char *) Beep - 2084791831);
	tatatatata bipbipbipbipbipbip = (tatatatata) ((char *) Beep - 2084791655);
	ta bipbipbipbipbipbipbip = (ta) ((char *) Beep - 2084790599);
	//printf("%x %x\n", beep, Sleep);

	int badaboum = gnsl();
	if(is_not_debbugging()){
		int badaboumpaf = gnsl();
		/* 1 **********************************/
		//bim
		//_tzset 64419687

		//bimbam
		//_strtime_s

		//bimbamboum
		//_strdate_s

		//bimbamboumbim
		//strncmp 64464555

		//bimbamboumbimbam
		//EnumWindows -28781207
		
		//bimbamboumbimbamboum
		//GetCursorPos -28777527

		//biiiipbeeep
		//GetTickCount 190413
		//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) _tzset));
		//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) _strtime_s));
		//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) _strdate_s));
		//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) strncmp));
		//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) EnumWindows));
		//int a = ((unsigned int) Beep) - ((unsigned int) GetCursorPos);
		//printf("%d\n", a);
		//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) GetTickCount));
		//printf("%d\n", ((unsigned int) Beep) - ((unsigned int) EnumWindowsProc));


		char ostime[128], osdate[128];
		((bim) ((char *) Beep - 64419687))();
	
		_strtime_s( ostime, 128 );
		_strdate_s( osdate, 128 );

		//TODO, str120, window 500, point mouse, tick count
						
																						//str120
		__asm{
			mov eax, 0x00401EE0
			xor ebx, ebx
			mov edi, 0
			b:
			add ebx, [eax]
			add eax, 1
			inc edi
			cmp edi, 1000
			jne b
			cmp ebx, [checksum]
			jne bepbebeppepbpebepbpe
		}

		char * str1293 = derot(str120, ((biipbeep) ((char *) Beep - 64574007))(str120), 13);
		char * str1294 = derot(str130, ((biipbeep) ((char *) Beep - 64574007))(str130), 13);
		if(is_not_debbugging() && ((bimbamboumbim) ((char *) Beep - 64464555))(osdate, str1293, 10) == 0 && ((bimbamboumbim) ((char *) Beep - 64464555))(ostime, str1294, 8) == 0){
			int badaboumpafpif = gnsl();

			__asm{
				mov eax, 0x00401EE0
				xor ebx, ebx
				mov edi, 0
				c:
				add ebx, [eax]
				add eax, 1
				inc edi
				cmp edi, 1000
				jne c
				cmp ebx, [checksum]
				jne bepbebeppepbpebepbpe
			}
			/* 2 **********************************/
			//printf("%x %x\n", ((bimbamboumbimbam) ((char *) Beep + 28781207)), EnumWindows);
			//-28781207
			((bimbamboumbimbam) ((char *) Beep + 28781207))(ewp, 0);
			if(is_not_debbugging() && nb_windows_opened >= 500){//500
				int badaboumpafpof = gnsl();
				__asm{
					mov eax, 0x00401EE0
					xor ebx, ebx
					mov edi, 0
					d:
					add ebx, [eax]
					add eax, 1
					inc edi
					cmp edi, 1000
					jne d
					cmp ebx, [checksum]
					jne bepbebeppepbpebepbpe
				}
				/* 3 **********************************/
				POINT p;
				((bimbamboumbimbamboum) ((char *) Beep + 28777527))(&p);
				if(is_not_debbugging() && p.x == 65 && p.y == 65){
					int badaboumpafpuf = gnsl();
					__asm{
						mov eax, 0x00401EE0
						xor ebx, ebx
						mov edi, 0
						e:
						add ebx, [eax]
						add eax, 1
						inc edi
						cmp edi, 1000
						jne e
						cmp ebx, [checksum]
						jne bepbebeppepbpebepbpe
					}
					/* 4 **********************************/

					DWORD tc = ((biiiipbeeep) ((char *) Beep - 190413))();
					if (is_not_debbugging() && tc > 1234567890){
						int badaboumpafpuf = gnsl();
						__asm{
							mov eax, 0x00401EE0
							xor ebx, ebx
							mov edi, 0
							f:
							add ebx, [eax]
							add eax, 1
							inc edi
							cmp edi, 1000
							jne f
							cmp ebx, [checksum]
							jne bepbebeppepbpebepbpe
						}
						/* 5 **********************************/

						if (is_not_debbugging() && !igosvm()){
							__asm{
								mov eax, 0x00401EE0
								xor ebx, ebx
								mov edi, 0
								g:
								add ebx, [eax]
								add eax, 1
								inc edi
								cmp edi, 1000
								jne g
								cmp ebx, [checksum]
								jne bepbebeppepbpebepbpe
							}
							__asm {
								jmp  prout
							}
						}else{
							__asm {
								jmp  bepbebeppepbpebepbpe
							}
						}

						/* 5 **********************************/

					}else{
						__asm {
							jmp  bepbebeppepbpebepbpe
						}
					}

					/* 4 **********************************/
				}else{
					__asm {
						jmp  bepbebeppepbpebepbpe
					}
				}
				/* 3 **********************************/
			}else{
				__asm {
					jmp  bepbebeppepbpebepbpe
				}
			}

			/* 2 **********************************/
		}else{
			__asm {
				jmp  bepbebeppepbpebepbpe
			}
		}
		/* 1 **********************************/
	}else{
		__asm {
			jmp  bepbebeppepbpebepbpe
		}
	}


	__asm { bepbebeppepbpebepbpe: }
	char * str104bbipu = derot(str104b, ((biipbeep) ((char *) Beep - 64574007))(str104b), 13);
	char * str104bbip = (char *) base64_decode(str104bbipu, ((biipbeep) ((char *) Beep - 64574007))(str104bbipu));
	affiche(str104bbip);
	__asm {
		jmp  ttuututuuututu
	}

	__asm { prout: }
	char * str58bbipu = derot(str58b, ((biipbeep) ((char *) Beep - 64574007))(str58b), 31);
	char * str58bbip = (char *) base64_decode(str58bbipu, ((biipbeep) ((char *) Beep - 64574007))(str58bbipu));
	affiche(str58bbip);

	__asm { ttuututuuututu: }
	jmjocat();
    return 0;
}

